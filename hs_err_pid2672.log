#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_ILLEGAL_INSTRUCTION (0xc000001d) at pc=0x00007ffe268e5c7c, pid=2672, tid=7900
#
# JRE version: Java(TM) SE Runtime Environment (17.0.9+11) (build 17.0.9+11-LTS-201)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (17.0.9+11-LTS-201, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# Problematic frame:
# C  [zip.dll+0x5c7c]
#
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  S U M M A R Y ------------

Command Line: -Dclassworlds.conf=C:\Program Files\NetBeans-19\netbeans\java\maven\bin\m2.conf -Dmaven.home=C:\Program Files\NetBeans-19\netbeans\java\maven -Dlibrary.jansi.path=C:\Program Files\NetBeans-19\netbeans\java\maven\lib\jansi-native -Dmaven.multiModuleProjectDirectory=D:\u\Netbeans Web\tienda org.codehaus.plexus.classworlds.launcher.Launcher -Dmaven.ext.class.path=C:\Program Files\NetBeans-19\netbeans\java\maven-nblib\netbeans-eventspy.jar -Dfile.encoding=UTF-8 --no-transfer-progress clean install

Host: AMD Ryzen 5 4600G with Radeon Graphics, 12 cores, 15G,  Windows 10 , 64 bit Build 19041 (10.0.19041.3636)
Time: Wed Nov  8 16:12:35 2023 Pacific Standard Time elapsed time: 4.673348 seconds (0d 0h 0m 4s)

---------------  T H R E A D  ---------------

Current thread (0x00000274051c07c0):  JavaThread "main" [_thread_in_native, id=7900, stack(0x000000a058000000,0x000000a058100000)]

Stack: [0x000000a058000000,0x000000a058100000],  sp=0x000000a0580fcc50,  free space=1011k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [zip.dll+0x5c7c]

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
J 355  java.util.zip.Inflater.inflateBytesBytes(J[BII[BII)J java.base@17.0.9 (0 bytes) @ 0x000002741455ad2f [0x000002741455aca0+0x000000000000008f]
J 1721 c2 java.util.zip.Inflater.inflate([BII)I java.base@17.0.9 (418 bytes) @ 0x00000274145e9118 [0x00000274145e8f40+0x00000000000001d8]
J 6491 c2 java.util.zip.ZipInputStream.read([BII)I java.base@17.0.9 (304 bytes) @ 0x0000027414893ddc [0x0000027414893d00+0x00000000000000dc]
J 5116 c1 java.util.jar.JarInputStream.read([BII)I java.base@17.0.9 (48 bytes) @ 0x000002740d5a3a1c [0x000002740d5a3940+0x00000000000000dc]
j  java.io.InputStream.readNBytes(I)[B+55 java.base@17.0.9
j  java.io.InputStream.readAllBytes()[B+3 java.base@17.0.9
j  java.util.jar.JarInputStream.checkManifest(Ljava/util/jar/JarEntry;)Ljava/util/jar/JarEntry;+28 java.base@17.0.9
j  java.util.jar.JarInputStream.<init>(Ljava/io/InputStream;Z)V+45 java.base@17.0.9
j  java.util.jar.JarInputStream.<init>(Ljava/io/InputStream;)V+3 java.base@17.0.9
j  com.sun.tools.javac.file.FSInfo.getJarClassPath(Ljava/nio/file/Path;)Ljava/util/List;+14 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.CacheFSInfo.getJarClassPath(Ljava/nio/file/Path;)Ljava/util/List;+25 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.Locations$SearchPath.addJarClassPath(Ljava/nio/file/Path;Z)V+8 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.Locations$SearchPath.addFile(Ljava/nio/file/Path;Z)V+271 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.Locations$SearchPath.addFiles(Ljava/lang/Iterable;Z)Lcom/sun/tools/javac/file/Locations$SearchPath;+35 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.Locations$SearchPath.addFiles(Ljava/lang/String;Z)Lcom/sun/tools/javac/file/Locations$SearchPath;+18 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.Locations$SearchPath.addFiles(Ljava/lang/String;)Lcom/sun/tools/javac/file/Locations$SearchPath;+9 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.Locations$SimpleLocationHandler.handleOption(Lcom/sun/tools/javac/main/Option;Ljava/lang/String;)Z+34 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.Locations.handleOption(Lcom/sun/tools/javac/main/Option;Ljava/lang/String;)Z+25 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.BaseFileManager.handleOption(Lcom/sun/tools/javac/main/Option;Ljava/lang/String;)Z+64 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.JavacFileManager.handleOption(Lcom/sun/tools/javac/main/Option;Ljava/lang/String;)Z+33 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.BaseFileManager$2.handleFileManagerOption(Lcom/sun/tools/javac/main/Option;Ljava/lang/String;)Z+6 jdk.compiler@17.0.9
j  com.sun.tools.javac.main.Option.process(Lcom/sun/tools/javac/main/OptionHelper;Ljava/lang/String;Ljava/lang/String;)V+230 jdk.compiler@17.0.9
j  com.sun.tools.javac.main.Option.handleOption(Lcom/sun/tools/javac/main/OptionHelper;Ljava/lang/String;Ljava/util/Iterator;)V+113 jdk.compiler@17.0.9
j  com.sun.tools.javac.file.BaseFileManager.handleOption(Ljava/lang/String;Ljava/util/Iterator;)Z+34 jdk.compiler@17.0.9
j  com.sun.tools.javac.main.Arguments.doProcessArgs(Ljava/lang/Iterable;Ljava/util/Set;Lcom/sun/tools/javac/main/OptionHelper;ZZ)Z+149 jdk.compiler@17.0.9
j  com.sun.tools.javac.main.Arguments.processArgs(Ljava/lang/Iterable;Ljava/util/Set;Lcom/sun/tools/javac/main/OptionHelper;ZZ)Z+8 jdk.compiler@17.0.9
j  com.sun.tools.javac.main.Arguments.init(Ljava/lang/String;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)V+55 jdk.compiler@17.0.9
j  com.sun.tools.javac.api.JavacTool.getTask(Ljava/io/Writer;Ljavax/tools/JavaFileManager;Ljavax/tools/DiagnosticListener;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;Lcom/sun/tools/javac/util/Context;)Lcom/sun/source/util/JavacTask;+465 jdk.compiler@17.0.9
j  com.sun.tools.javac.api.JavacTool.getTask(Ljava/io/Writer;Ljavax/tools/JavaFileManager;Ljavax/tools/DiagnosticListener;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Lcom/sun/source/util/JavacTask;+21 jdk.compiler@17.0.9
j  com.sun.tools.javac.api.JavacTool.getTask(Ljava/io/Writer;Ljavax/tools/JavaFileManager;Ljavax/tools/DiagnosticListener;Ljava/lang/Iterable;Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljavax/tools/JavaCompiler$CompilationTask;+10 jdk.compiler@17.0.9
j  org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess([Ljava/lang/String;Lorg/codehaus/plexus/compiler/CompilerConfiguration;[Ljava/lang/String;)Lorg/codehaus/plexus/compiler/CompilerResult;+127
j  org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile(Lorg/codehaus/plexus/compiler/CompilerConfiguration;)Lorg/codehaus/plexus/compiler/CompilerResult;+159
j  org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute()V+3570
j  org.apache.maven.plugin.compiler.TestCompilerMojo.execute()V+20
j  org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/plugin/MojoExecution;)V+152
j  org.apache.maven.lifecycle.internal.MojoExecutor.doExecute2(Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/plugin/MojoExecution;)V+20
j  org.apache.maven.lifecycle.internal.MojoExecutor.doExecute(Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/plugin/MojoExecution;Lorg/apache/maven/lifecycle/internal/ProjectIndex;Lorg/apache/maven/lifecycle/internal/DependencyContext;)V+40
j  org.apache.maven.lifecycle.internal.MojoExecutor.execute(Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/plugin/MojoExecution;Lorg/apache/maven/lifecycle/internal/ProjectIndex;Lorg/apache/maven/lifecycle/internal/DependencyContext;)V+183
j  org.apache.maven.lifecycle.internal.MojoExecutor.execute(Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/plugin/MojoExecution;Lorg/apache/maven/lifecycle/internal/ProjectIndex;Lorg/apache/maven/lifecycle/internal/DependencyContext;Lorg/apache/maven/lifecycle/internal/PhaseRecorder;)V+6
j  org.apache.maven.lifecycle.internal.MojoExecutor.access$000(Lorg/apache/maven/lifecycle/internal/MojoExecutor;Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/plugin/MojoExecution;Lorg/apache/maven/lifecycle/internal/ProjectIndex;Lorg/apache/maven/lifecycle/internal/DependencyContext;Lorg/apache/maven/lifecycle/internal/PhaseRecorder;)V+8
j  org.apache.maven.lifecycle.internal.MojoExecutor$1.run(Lorg/apache/maven/plugin/MojoExecution;)V+21
j  org.apache.maven.plugin.DefaultMojosExecutionStrategy.execute(Ljava/util/List;Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/plugin/MojoExecutionRunner;)V+33
j  org.apache.maven.lifecycle.internal.MojoExecutor.execute(Lorg/apache/maven/execution/MavenSession;Ljava/util/List;Lorg/apache/maven/lifecycle/internal/ProjectIndex;)V+72
j  org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/lifecycle/internal/ReactorContext;Lorg/apache/maven/project/MavenProject;Lorg/apache/maven/lifecycle/internal/TaskSegment;)V+151
j  org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/lifecycle/internal/ReactorContext;Lorg/apache/maven/project/MavenProject;Lorg/apache/maven/lifecycle/internal/TaskSegment;)V+7
j  org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/lifecycle/internal/ReactorContext;Lorg/apache/maven/lifecycle/internal/ProjectBuildList;Ljava/util/List;Lorg/apache/maven/lifecycle/internal/ReactorBuildStatus;)V+77
j  org.apache.maven.lifecycle.internal.LifecycleStarter.execute(Lorg/apache/maven/execution/MavenSession;)V+341
j  org.apache.maven.DefaultMaven.doExecute(Lorg/apache/maven/execution/MavenExecutionRequest;Lorg/apache/maven/execution/MavenSession;Lorg/apache/maven/execution/MavenExecutionResult;Lorg/eclipse/aether/DefaultRepositorySystemSession;)Lorg/apache/maven/execution/MavenExecutionResult;+418
j  org.apache.maven.DefaultMaven.doExecute(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/apache/maven/execution/MavenExecutionResult;+98
j  org.apache.maven.DefaultMaven.execute(Lorg/apache/maven/execution/MavenExecutionRequest;)Lorg/apache/maven/execution/MavenExecutionResult;+2
j  org.apache.maven.cli.MavenCli.execute(Lorg/apache/maven/cli/CliRequest;)I+27
j  org.apache.maven.cli.MavenCli.doMain(Lorg/apache/maven/cli/CliRequest;)I+66
j  org.apache.maven.cli.MavenCli.main([Ljava/lang/String;Lorg/codehaus/plexus/classworlds/ClassWorld;)I+24
v  ~StubRoutines::call_stub
j  jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+0 java.base@17.0.9
j  jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+133 java.base@17.0.9
j  jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+6 java.base@17.0.9
j  java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;+59 java.base@17.0.9
j  org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced([Ljava/lang/String;)V+45
j  org.codehaus.plexus.classworlds.launcher.Launcher.launch([Ljava/lang/String;)V+2
j  org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode([Ljava/lang/String;)I+108
j  org.codehaus.plexus.classworlds.launcher.Launcher.main([Ljava/lang/String;)V+1
v  ~StubRoutines::call_stub

siginfo: EXCEPTION_ILLEGAL_INSTRUCTION (0xc000001d)


Register to memory mapping:

RIP=0x00007ffe268e5c7c zip.dll
RAX=0x0000000000000061 is an unknown value
RBX=0x0000000714ecc0a8 is pointing into object: [B 
{0x0000000714ecc098} - klass: {type array byte}
 - length: 8192
RCX=0x0000000000000003 is an unknown value
RDX=0x0 is NULL
RSP=0x000000a0580fcc50 is pointing into the stack for thread: 0x00000274051c07c0
RBP=0x000000a0580fcca0 is pointing into the stack for thread: 0x00000274051c07c0
RSI=0x0000000000000004 is an unknown value
RDI=0x00000274709ce4d0 points into unknown readable memory: 0x0000027470654190 | 90 41 65 70 74 02 00 00
R8 =0x00000274709cea20 points into unknown readable memory: 0x0000030000050200 | 00 02 05 00 00 03 00 00
R9 =0x0 is NULL
R10=0x0000000714ecb9e5 is pointing into object: [B 
{0x0000000714ecb9b8} - klass: {type array byte}
 - length: 512
R11=0x0000000000002000 is an unknown value
R12=0x00000000000001e3 is an unknown value
R13=0x00000274709ce540 points into unknown readable memory: 0x0000000300000006 | 06 00 00 00 03 00 00 00
R14=0x0000000000000007 is an unknown value
R15=0x0000027470654190 points into unknown readable memory: 0x0000000714ecb9c8 | c8 b9 ec 14 07 00 00 00


Registers:
RAX=0x0000000000000061, RBX=0x0000000714ecc0a8, RCX=0x0000000000000003, RDX=0x0000000000000000
RSP=0x000000a0580fcc50, RBP=0x000000a0580fcca0, RSI=0x0000000000000004, RDI=0x00000274709ce4d0
R8 =0x00000274709cea20, R9 =0x0000000000000000, R10=0x0000000714ecb9e5, R11=0x0000000000002000
R12=0x00000000000001e3, R13=0x00000274709ce540, R14=0x0000000000000007, R15=0x0000027470654190
RIP=0x00007ffe268e5c7c, EFLAGS=0x0000000000010202

Top of Stack: (sp=0x000000a0580fcc50)
0x000000a0580fcc50:   0000000714ecc0a8 00007ffe00000080
0x000000a0580fcc60:   0000000000000000 000002740d59faf4
0x000000a0580fcc70:   00000274709ce540 00000274709ce7e0
0x000000a0580fcc80:   0000000000000000 0000020000000300
0x000000a0580fcc90:   0000000714ecb9e5 0000000714ecc0a8
0x000000a0580fcca0:   000000a0580fcd98 00000274051c0a70
0x000000a0580fccb0:   0000027470654190 0000000714ecc0a8
0x000000a0580fccc0:   0000000000002000 0000000000000200
0x000000a0580fccd0:   0000000714ecb9c8 00007ffe268e1c7f
0x000000a0580fcce0:   000000a0580fce20 0000000000000001
0x000000a0580fccf0:   0000000000002000 0000027400002000
0x000000a0580fcd00:   0000000000002000 00000000fffffffb
0x000000a0580fcd10:   00000274051c07c0 000000a0580fc9b8
0x000000a0580fcd20:   0000000714ecb748 0000000000000000
0x000000a0580fcd30:   0000000000000000 000002741455adcf
0x000000a0580fcd40:   000000a0580fce20 000000a0580fcd88 

Instructions: (pc=0x00007ffe268e5c7c)
0x00007ffe268e5b7c:   f0 45 33 c9 44 8b 5d 58 89 45 e4 85 c0 74 0c 48
0x00007ffe268e5b8c:   8d 05 b6 82 00 00 e9 d7 08 00 00 44 89 8f 84 00
0x00007ffe268e5b9c:   00 00 c7 47 08 46 3f 00 00 eb 07 4c 8d 6f 70 45
0x00007ffe268e5bac:   33 c9 8b 87 80 00 00 00 03 47 7c 39 87 84 00 00
0x00007ffe268e5bbc:   00 0f 83 f9 01 00 00 41 8b 4d 00 ba 01 00 00 00
0x00007ffe268e5bcc:   4c 8b 47 60 d3 e2 ff ca 8b c6 8b ca 48 23 c8 41
0x00007ffe268e5bdc:   8b 04 88 eb 2d 45 85 e4 0f 84 bd fc ff ff 41 0f
0x00007ffe268e5bec:   b6 02 41 8b ce d3 e0 49 ff c2 03 f0 4c 89 55 f0
0x00007ffe268e5bfc:   8b ce 41 ff cc 41 83 c6 08 8b c2 48 23 c1 41 8b
0x00007ffe268e5c0c:   04 80 8b c8 89 45 e8 c1 e9 08 0f b6 c9 41 3b ce
0x00007ffe268e5c1c:   77 c3 8b d0 b9 10 00 00 00 c1 ea 10 66 3b d1 73
0x00007ffe268e5c2c:   2b c1 e8 08 0f b6 c8 8b 87 84 00 00 00 44 2b f1
0x00007ffe268e5c3c:   d3 ee 66 89 94 47 90 00 00 00 ff 87 84 00 00 00
0x00007ffe268e5c4c:   44 8b 87 84 00 00 00 e9 3c 01 00 00 75 67 c1 e8
0x00007ffe268e5c5c:   08 0f b6 d0 44 8d 42 02 eb 22 45 85 e4 0f 84 38
0x00007ffe268e5c6c:   fc ff ff 41 0f b6 02 41 8b ce d3 e0 49 ff c2 03
0x00007ffe268e5c7c:   f0 4c 89 55 f0 41 ff cc 41 83 c6 08 45 3b f0 72
0x00007ffe268e5c8c:   d9 8b 87 84 00 00 00 8b ca d3 ee 44 2b f2 85 c0
0x00007ffe268e5c9c:   0f 84 08 01 00 00 8b d6 41 83 c6 fe 83 e2 03 c1
0x00007ffe268e5cac:   ee 02 83 c2 03 ff c8 44 0f b7 8c 47 90 00 00 00
0x00007ffe268e5cbc:   e9 98 00 00 00 66 83 7d ea 11 44 0f b6 45 e9 75
0x00007ffe268e5ccc:   44 41 8d 50 03 eb 22 45 85 e4 0f 84 cb fb ff ff
0x00007ffe268e5cdc:   41 0f b6 02 41 8b ce d3 e0 49 ff c2 03 f0 4c 89
0x00007ffe268e5cec:   55 f0 41 ff cc 41 83 c6 08 44 3b f2 72 d9 41 8b
0x00007ffe268e5cfc:   c8 b8 fd ff ff ff d3 ee 8b d6 83 e2 07 83 c2 03
0x00007ffe268e5d0c:   c1 ee 03 eb 42 41 8d 50 07 eb 22 45 85 e4 0f 84
0x00007ffe268e5d1c:   87 fb ff ff 41 0f b6 02 41 8b ce d3 e0 49 ff c2
0x00007ffe268e5d2c:   03 f0 4c 89 55 f0 41 ff cc 41 83 c6 08 44 3b f2
0x00007ffe268e5d3c:   72 d9 41 8b c8 b8 f9 ff ff ff d3 ee 8b d6 83 e2
0x00007ffe268e5d4c:   7f 83 c2 0b c1 ee 07 41 2b c0 44 03 f0 44 8b 87
0x00007ffe268e5d5c:   84 00 00 00 8b 87 80 00 00 00 03 47 7c 41 8d 0c
0x00007ffe268e5d6c:   10 3b c8 77 39 41 8b c0 66 44 89 8c 47 90 00 00 


Stack slot to memory mapping:
stack at sp + 0 slots: 0x0000000714ecc0a8 is pointing into object: [B 
{0x0000000714ecc098} - klass: {type array byte}
 - length: 8192
stack at sp + 1 slots: 0x00007ffe00000080 is an unknown value
stack at sp + 2 slots: 0x0 is NULL
stack at sp + 3 slots: 0x000002740d59faf4 is at entry_point+1748 in (nmethod*)0x000002740d59f110
Compiled method (c1)    4688 5111   !   3       sun.nio.ch.FileChannelImpl::read (266 bytes)
 total in heap  [0x000002740d59f110,0x000002740d5a0ba0] = 6800
 relocation     [0x000002740d59f268,0x000002740d59f408] = 416
 main code      [0x000002740d59f420,0x000002740d5a0300] = 3808
 stub code      [0x000002740d5a0300,0x000002740d5a0408] = 264
 metadata       [0x000002740d5a0408,0x000002740d5a0448] = 64
 scopes data    [0x000002740d5a0448,0x000002740d5a0788] = 832
 scopes pcs     [0x000002740d5a0788,0x000002740d5a09e8] = 608
 dependencies   [0x000002740d5a09e8,0x000002740d5a09f0] = 8
 handler table  [0x000002740d5a09f0,0x000002740d5a0b70] = 384
 nul chk table  [0x000002740d5a0b70,0x000002740d5a0ba0] = 48
stack at sp + 4 slots: 0x00000274709ce540 points into unknown readable memory: 0x0000000300000006 | 06 00 00 00 03 00 00 00
stack at sp + 5 slots: 0x00000274709ce7e0 points into unknown readable memory: 0x0006000000080005 | 05 00 08 00 00 00 06 00
stack at sp + 6 slots: 0x0 is NULL
stack at sp + 7 slots: 0x0000020000000300 is an unknown value


Compiled method (n/a)    4690  355     n 0       java.util.zip.Inflater::inflateBytesBytes (native)
 total in heap  [0x000002741455ab10,0x000002741455af20] = 1040
 relocation     [0x000002741455ac68,0x000002741455ac98] = 48
 main code      [0x000002741455aca0,0x000002741455af20] = 640

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000027428334b30} 'inflateBytesBytes' '(J[BII[BII)J' in 'java/util/zip/Inflater'
  # this:     rdx:rdx   = 'java/util/zip/Inflater'
  # parm0:    r8:r8     = long
  # parm1:    r9:r9     = '[B'
  # parm2:    rdi       = int
  # parm3:    rsi       = int
  # parm4:    rcx:rcx   = '[B'
  # parm5:    [sp+0x90]   = int  (sp of caller)
  # parm6:    [sp+0x98]   = int
  0x000002741455aca0: 448b 5208 | 49bb 0000 | 0028 7402 | 0000 4d03 | d349 3bc2 | 0f84 0600 

  0x000002741455acb8: ;   {runtime_call ic_miss_stub}
  0x000002741455acb8: 0000 e9c1 | 1da9 ff90 
[Verified Entry Point]
  0x000002741455acc0: 8984 2400 | 90ff ff55 | 488b ec48 | 81ec 8000 | 0000 4863 | 4518 4889 | 4424 4048 | 6345 1048 
  0x000002741455ace0: 8944 2438 | 4889 4c24 | 7048 83f9 | 0048 8d44 | 2470 480f | 4444 2470 | 4889 4424 | 3048 8974 
  0x000002741455ad00: 2428 4889 | 7c24 204c | 894c 2458 | 4983 f900 | 4c8d 4c24 | 584c 0f44 | 4c24 5848 | 8954 2448 
  0x000002741455ad20: 4883 fa00 | 488d 5424 | 4848 0f44 | 5424 48c5 

  0x000002741455ad30: ;   {internal_word}
  0x000002741455ad30: f877 49ba | 2fad 5514 | 7402 0000 | 4d89 9798 | 0200 0049 | 89a7 9002 

  0x000002741455ad48: ;   {external_word}
  0x000002741455ad48: 0000 49ba | 24a0 5527 | fe7f 0000 | 4180 3a00 | 0f84 5200 | 0000 5241 

  0x000002741455ad60: ;   {metadata({method} {0x0000027428334b30} 'inflateBytesBytes' '(J[BII[BII)J' in 'java/util/zip/Inflater')}
  0x000002741455ad60: 5041 5148 | ba28 4b33 | 2874 0200 | 0049 8bcf | 4883 ec20 | f7c4 0f00 | 0000 0f84 | 1a00 0000 
  0x000002741455ad80: 4883 ec08 

  0x000002741455ad84: ;   {runtime_call}
  0x000002741455ad84: 49ba 20e6 | 1227 fe7f | 0000 41ff | d248 83c4 | 08e9 0d00 

  0x000002741455ad98: ;   {runtime_call}
  0x000002741455ad98: 0000 49ba | 20e6 1227 | fe7f 0000 | 41ff d248 | 83c4 2041 | 5941 585a | 498d 8fb0 | 0200 0041 
  0x000002741455adb8: c787 4003 | 0000 0400 

  0x000002741455adc0: ;   {runtime_call}
  0x000002741455adc0: 0000 49ba | 981b 8e26 | fe7f 0000 | 41ff d2c5 | f877 41c7 | 8740 0300 | 0005 0000 | 00f0 8344 
  0x000002741455ade0: 24c0 0049 | 3baf 4803 | 0000 0f87 | 1100 0000 | 4181 bf30 | 0300 0000 | 0000 000f | 842c 0000 
  0x000002741455ae00: 00c5 f877 | 4889 45f8 | 498b cf4c | 8be4 4883 | ec20 4883 

  0x000002741455ae14: ;   {runtime_call}
  0x000002741455ae14: e4f0 49ba | 509e 1d27 | fe7f 0000 | 41ff d249 | 8be4 4d33 | e448 8b45 | f841 c787 | 4003 0000 
  0x000002741455ae34: 0800 0000 | 4181 bfb0 | 0300 0002 | 0000 000f | 84a3 0000 

  0x000002741455ae48: ;   {external_word}
  0x000002741455ae48: 0049 ba24 | a055 27fe | 7f00 0041 | 803a 000f | 8450 0000 | 0048 8945 

  0x000002741455ae60: ;   {metadata({method} {0x0000027428334b30} 'inflateBytesBytes' '(J[BII[BII)J' in 'java/util/zip/Inflater')}
  0x000002741455ae60: f848 ba28 | 4b33 2874 | 0200 0049 | 8bcf 4883 | ec20 f7c4 | 0f00 0000 | 0f84 1a00 | 0000 4883 
  0x000002741455ae80: ;   {runtime_call}
  0x000002741455ae80: ec08 49ba | 20e6 1227 | fe7f 0000 | 41ff d248 | 83c4 08e9 | 0d00 0000 

  0x000002741455ae98: ;   {runtime_call}
  0x000002741455ae98: 49ba 20e6 | 1227 fe7f | 0000 41ff | d248 83c4 | 2048 8b45 | f849 c787 | 9002 0000 | 0000 0000 
  0x000002741455aeb8: 49c7 8798 | 0200 0000 | 0000 00c5 | f877 498b | 8fd8 0000 | 00c7 8100 | 0100 0000 | 0000 00c9 
  0x000002741455aed8: 4981 7f08 | 0000 0000 | 0f85 0100 

  0x000002741455aee4: ;   {runtime_call StubRoutines (1)}
  0x000002741455aee4: 0000 c3e9 | 1460 a4ff | c5f8 7748 | 8945 f84c | 8be4 4883 | ec20 4883 

  0x000002741455aefc: ;   {runtime_call}
  0x000002741455aefc: e4f0 49ba | c016 1327 | fe7f 0000 | 41ff d249 | 8be4 4d33 | e448 8b45 | f8e9 2fff | ffff f4f4 
  0x000002741455af1c: f4f4 f4f4 
[/MachCode]


Compiled method (c2)    4697 1721   !   4       java.util.zip.Inflater::inflate (418 bytes)
 total in heap  [0x00000274145e8d90,0x00000274145e9c98] = 3848
 relocation     [0x00000274145e8ee8,0x00000274145e8f40] = 88
 main code      [0x00000274145e8f40,0x00000274145e9620] = 1760
 stub code      [0x00000274145e9620,0x00000274145e9658] = 56
 metadata       [0x00000274145e9658,0x00000274145e9698] = 64
 scopes data    [0x00000274145e9698,0x00000274145e9a58] = 960
 scopes pcs     [0x00000274145e9a58,0x00000274145e9bc8] = 368
 dependencies   [0x00000274145e9bc8,0x00000274145e9bd8] = 16
 handler table  [0x00000274145e9bd8,0x00000274145e9c80] = 168
 nul chk table  [0x00000274145e9c80,0x00000274145e9c98] = 24

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x00000274283343f0} 'inflate' '([BII)I' in 'java/util/zip/Inflater'
  # this:     rdx:rdx   = 'java/util/zip/Inflater'
  # parm0:    r8:r8     = '[B'
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x00000274145e8f40: 448b 5208 | 49bb 0000 | 0028 7402 | 0000 4d03 | d349 3bc2 

  0x00000274145e8f54: ;   {runtime_call ic_miss_stub}
  0x00000274145e8f54: 0f85 263b | a0ff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x00000274145e8f60: 8984 2400 | 90ff ff55 | 4883 ec60 | 897c 2434 | 4c89 4424 | 2848 8954 | 2420 4489 | 4c24 3045 
  0x00000274145e8f80: 85c9 0f8c | 1903 0000 | 85ff 0f8c | 2803 0000 

  0x00000274145e8f90: ; implicit exception: dispatches to 0x00000274145e9448
  0x00000274145e8f90: 418b 680c | 2bef 443b | cd0f 8f39 | 0300 0044 | 8b52 3044 | 8954 2440 | 4585 d20f | 84ab 0200 
  0x00000274145e8fb0: 004b 8d2c | d448 8d5c | 2450 488b | 4500 48f7 | c002 0000 | 0075 2548 | 83c8 0148 | 8903 f048 
  0x00000274145e8fd0: 0fb1 5d00 | 0f84 3e00 | 0000 482b | c448 81e0 | 07f0 ffff | 4889 03e9 | 2c00 0000 | 4c8b d848 
  0x00000274145e8ff0: 33c0 f04d | 0fb1 7b3e | 48c7 0303 | 0000 000f | 8413 0000 | 004c 3bf8 | 0f85 0a00 | 0000 49ff 
  0x00000274145e9010: 8386 0000 | 0048 33c0 | 0f85 5202 | 0000 4c8b | 5424 2045 | 8b5a 304f | 8b44 dc10 | 4d85 c00f 
  0x00000274145e9030: 84af 0200 | 0045 8b5a | 3445 85db | 0f84 7f00 | 0000 478b | 4cdc 0843 | 8b7c dc18 | 438b 74dc 
  0x00000274145e9050: 1c2b f733 | c985 f60f 

  0x00000274145e9058: ;   {metadata('java/nio/HeapByteBuffer')}
  0x00000274145e9058: 4cf1 4181 | f968 6b1c | 000f 85e5 | 0200 0048 | 896c 2438 | 4b8d 2cdc | 897c 2444 | 037d 2844 
  0x00000274145e9078: 8b5d 304d | 8bcb 49c1 | e103 498b | d248 8b4c | 2428 4889 | 4424 f88b | 4424 3089 | 0424 488b 
  0x00000274145e9098: 4424 f848 | 8944 24f8 | 8b44 2434 | 8944 2408 | 488b 4424 | f84c 8b54 | 2438 4c89 

  0x00000274145e90b4: ;   {optimized virtual_call}
  0x00000274145e90b4: 5424 28e8 

  0x00000274145e90b8: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [56]=Oop [64]=NarrowOop }
                      ;*invokevirtual inflateBytesBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@221 (line 401)
  0x00000274145e90b8: 041c f7ff | 4c8b c5eb | 5a48 896c | 2438 418b | 7220 458b | 5a0c 458b | 5238 4489 | 5c24 4441 
  0x00000274145e90d8: 2bf3 4d8b | ca49 c1e1 | 0348 8b54 | 2420 418b | fb48 8b4c | 2428 4889 | 4424 f88b | 4424 3089 
  0x00000274145e90f8: 0424 488b | 4424 f848 | 8944 24f8 | 8b44 2434 | 8944 2408 | 488b 4424 

  0x00000274145e9110: ;   {optimized virtual_call}
  0x00000274145e9110: f866 90e8 

  0x00000274145e9114: ; ImmutableOopMap {rbp=Oop [32]=Oop [56]=Oop [64]=NarrowOop }
                      ;*invokevirtual inflateBytesBytes {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@77 (line 378)
  0x00000274145e9114: a81b f7ff | 4533 c04c | 8bd0 49c1 | ea3e 49f7 | c201 0000 | 0074 0c4c | 8b5c 2420 | 41c6 432c 
  0x00000274145e9134: 01eb 054c | 8b5c 2420 | 4c8b d049 | c1ea 1f4c | 8bc8 49c1 | e93f 4981 | e2ff ffff | 7f48 81e0 
  0x00000274145e9154: ffff ff7f | 418b da44 | 8bd0 4d85 | c90f 85b1 | 0100 008b | 4c24 4441 | 03ca 4d85 | c074 2641 
  0x00000274145e9174: 8b68 1c3b | cd0f 8f15 | 0200 0085 | c90f 8c41 | 0200 0041 | 8b68 0c3b | e90f 8f61 | 0200 0041 
  0x00000274145e9194: 8948 18eb | 0441 894b | 0c4c 63c3 | 4d01 4318 | 4d63 d24d | 0153 104c | 8b5c 2438 | 488d 4424 
  0x00000274145e91b4: 5048 8138 | 0000 0000 | 0f84 8300 | 0000 4d8b | 1349 f7c2 | 0200 0000 | 746f 4981 | ba86 0000 
  0x00000274145e91d4: 0000 0000 | 0074 0949 | ff8a 8600 | 0000 eb51 | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a 
  0x00000274145e91f4: 49c7 423e | 0000 0000 | eb47 4981 | ba9e 0000 | 0000 0000 | 0074 2548 | 33c0 49c7 | 423e 0000 
  0x00000274145e9214: 0000 f083 | 0424 0049 | 81ba 9e00 | 0000 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb 
  0x00000274145e9234: 10f7 c000 | 0000 00eb | 084c 8b10 | f04d 0fb1 | 1375 3e8b | c348 83c4 

  0x00000274145e924c: ;   {poll_return}
  0x00000274145e924c: 605d 493b | a748 0300 | 000f 87a1 | 0300 00c3 | baf6 ffff | ff48 8b6c | 2420 4c89 

  0x00000274145e9268: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e9268: 4424 20e8 

  0x00000274145e926c: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@31 (line 369)
  0x00000274145e926c: 9090 a0ff | 488b d54c | 8d44 2450 

  0x00000274145e9278: ;   {runtime_call _complete_monitor_locking_Java}
  0x00000274145e9278: 6666 90e8 

  0x00000274145e927c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [64]=NarrowOop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@31 (line 369)
  0x00000274145e927c: 003f abff | e999 fdff | ff48 8b4c | 2438 488d | 5424 504d | 8bc7 49ba | f0d4 1227 | fe7f 0000 
  0x00000274145e929c: 41ff d2eb | a6ba 45ff | ffff 488b | 6c24 204c | 8944 2420 

  0x00000274145e92b0: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e92b0: 6666 90e8 

  0x00000274145e92b4: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.Inflater::inflate@1 (line 366)
  0x00000274145e92b4: 4890 a0ff | ba45 ffff | ff48 8b6c | 2420 4c89 | 4424 2044 | 894c 2428 | 897c 2430 

  0x00000274145e92d0: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e92d0: 6666 90e8 

  0x00000274145e92d4: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.Inflater::inflate@5 (line 366)
  0x00000274145e92d4: 2890 a0ff | ba45 ffff 

  0x00000274145e92dc: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e92dc: ff66 90e8 

  0x00000274145e92e0: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.Inflater::inflate@13 (line 366)
  0x00000274145e92e0: 1c90 a0ff | 4533 d24d | 3bc2 bdff | ffff ff7c | 0840 0f95 | c540 0fb6 | edba 45ff | ffff 4889 
  0x00000274145e9300: 4424 f88b | 4424 4089 | 4424 3848 | 8b44 24f8 

  0x00000274145e9310: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e9310: 6666 90e8 

  0x00000274145e9314: ; ImmutableOopMap {[32]=Oop [40]=Oop [56]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.Inflater::ensureOpen@33 (line 713)
                      ; - java.util.zip.Inflater::inflate@33 (line 370)
  0x00000274145e9314: e88f a0ff | 33c9 4c3b | c9bd ffff | ffff 7c08 | 400f 95c5 | 400f b6ed | ba45 ffff | ff4c 895c 
  0x00000274145e9334: 2420 4c89 | 4424 3044 | 8954 2438 | 895c 243c 

  0x00000274145e9344: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e9344: 6666 90e8 

  0x00000274145e9348: ; ImmutableOopMap {[32]=Oop [48]=Oop [64]=NarrowOop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.Inflater::inflate@344 (line 423)
  0x00000274145e9348: b48f a0ff | bade ffff | ff49 8bea | 48ff 7424 | 2848 8f44 | 2420 4889 | 4424 f88b | 4424 3089 
  0x00000274145e9368: 4424 2848 | 8b44 24f8 | 4889 4424 | f88b 4424 | 3489 4424 | 2c48 8b44 | 24f8 897c | 2438 8974 
  0x00000274145e9388: 243c 4489 

  0x00000274145e938c: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e938c: 5c24 44e8 

  0x00000274145e9390: ; ImmutableOopMap {rbp=Oop [32]=Oop [64]=NarrowOop [68]=NarrowOop }
                      ;*invokevirtual isDirect {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@124 (line 389)
  0x00000274145e9390: 6c8f a0ff | ba45 ffff | ff4c 895c | 2420 4889 | 4424 f88b | 4424 4089 | 4424 2848 | 8b44 24f8 
  0x00000274145e93b0: 4489 5424 | 2c89 5c24 | 304c 8944 | 2440 894c 

  0x00000274145e93c0: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e93c0: 244c 90e8 

  0x00000274145e93c4: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [64]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Buffer::position@5 (line 315)
                      ; - java.nio.ByteBuffer::position@2 (line 1516)
                      ; - java.util.zip.Inflater::inflate@364 (line 427)
  0x00000274145e93c4: 388f a0ff | ba45 ffff | ff49 8beb | 448b 5c24 | 4044 8954 | 2424 895c | 2428 4489 | 5c24 2c4c 
  0x00000274145e93e4: 8944 2438 | 894c 2444 

  0x00000274145e93ec: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e93ec: 6666 90e8 

  0x00000274145e93f0: ; ImmutableOopMap {rbp=Oop [44]=NarrowOop [56]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Buffer::position@14 (line 315)
                      ; - java.nio.ByteBuffer::position@2 (line 1516)
                      ; - java.util.zip.Inflater::inflate@364 (line 427)
  0x00000274145e93f0: 0c8f a0ff | ba45 ffff | ff4c 895c | 2420 4889 | 4424 f88b | 4424 4089 | 4424 2848 | 8b44 24f8 
  0x00000274145e9410: 4489 5424 | 2c89 5c24 | 304c 8944 | 2440 894c 

  0x00000274145e9420: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e9420: 244c 90e8 

  0x00000274145e9424: ; ImmutableOopMap {[32]=Oop [40]=NarrowOop [64]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.nio.Buffer::position@37 (line 317)
                      ; - java.nio.ByteBuffer::position@2 (line 1516)
                      ; - java.util.zip.Inflater::inflate@364 (line 427)
  0x00000274145e9424: d88e a0ff | 488b d048 | 8b6c 2420 | 48ff 7424 | 3848 8f44 

  0x00000274145e9438: ;   {runtime_call _rethrow_Java}
  0x00000274145e9438: 2428 90e8 

  0x00000274145e943c: ; ImmutableOopMap {rbp=Oop [40]=Oop [56]=Oop [64]=NarrowOop }
                      ;*invokevirtual inflateBytesBytes {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.zip.Inflater::inflate@77 (line 378)
  0x00000274145e943c: c099 abff 

  0x00000274145e9440: ;   {runtime_call _rethrow_Java}
  0x00000274145e9440: 488b d0e8 

  0x00000274145e9444: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [56]=Oop [64]=NarrowOop }
                      ;*invokevirtual inflateBytesBytes {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.zip.Inflater::inflate@221 (line 401)
  0x00000274145e9444: b899 abff | baf6 ffff | ff48 8b6c | 2420 4489 

  0x00000274145e9454: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e9454: 4c24 28e8 

  0x00000274145e9458: ; ImmutableOopMap {rbp=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@10 (line 366)
  0x00000274145e9458: a48e a0ff | baf6 ffff | ff49 8bea | 48ff 7424 | 2848 8f44 | 2420 4889 | 4424 f88b | 4424 3089 
  0x00000274145e9478: 4424 2848 | 8b44 24f8 | 4889 4424 | f88b 4424 | 3489 4424 | 2c48 8b44 | 24f8 4889 | 4424 f88b 
  0x00000274145e9498: 4424 4089 | 4424 3048 | 8b44 24f8 

  0x00000274145e94a4: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e94a4: 6666 90e8 

  0x00000274145e94a8: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=NarrowOop }
                      ;*invokevirtual address {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::ensureOpen@28 (line 713)
                      ; - java.util.zip.Inflater::inflate@33 (line 370)
  0x00000274145e94a8: 548e a0ff | bab5 ffff | ff44 8b5c | 2440 4889 | 4424 2844 | 895c 2430 

  0x00000274145e94c0: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e94c0: 6666 90e8 

  0x00000274145e94c4: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=NarrowOop [64]=NarrowOop }
                      ;*astore {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@85 (line 381)
  0x00000274145e94c4: 388e a0ff | 488b d8eb | 0348 8bd8 | 4c8b 5c24 | 3848 8d44 | 2450 4881 | 3800 0000 | 000f 8483 
  0x00000274145e94e4: 0000 004d | 8b13 49f7 | c202 0000 | 0074 6f49 | 81ba 8600 | 0000 0000 | 0000 7409 | 49ff 8a86 
  0x00000274145e9504: 0000 00eb | 5149 8b82 | 9600 0000 | 490b 828e | 0000 0075 | 0a49 c742 | 3e00 0000 | 00eb 4749 
  0x00000274145e9524: 81ba 9e00 | 0000 0000 | 0000 7425 | 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4981 ba9e 
  0x00000274145e9544: 0000 0000 | 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 | eb10 f7c0 | 0000 0000 | eb08 4c8b 
  0x00000274145e9564: 10f0 4d0f | b113 7514 | 488b d3eb | 05eb 0048 | 8bd0 4883 

  0x00000274145e9578: ;   {runtime_call _rethrow_Java}
  0x00000274145e9578: c460 5de9 | 8098 abff | 488b 4c24 | 3848 8d54 | 2450 4d8b | c749 baf0 | d412 27fe | 7f00 0041 
  0x00000274145e9598: ffd2 ebd0 | bab5 ffff | ff44 8b5c | 2440 4889 | 4424 2844 | 895c 2424 

  0x00000274145e95b0: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e95b0: 6666 90e8 

  0x00000274145e95b4: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [64]=NarrowOop }
                      ;*astore {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@250 (line 410)
  0x00000274145e95b4: 488d a0ff | bab5 ffff | ff48 8944 | 24f8 8b44 | 2440 8944 | 2428 488b | 4424 f848 | 8944 2430 
  0x00000274145e95d4: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e95d4: 6666 90e8 

  0x00000274145e95d8: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=NarrowOop [48]=Oop }
                      ;*astore {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@229 (line 405)
  0x00000274145e95d8: 248d a0ff | bab5 ffff | ff48 8b6c | 2420 448b | 5c24 4048 | 8944 2428 | 4489 5c24 

  0x00000274145e95f4: ;   {runtime_call UncommonTrapBlob}
  0x00000274145e95f4: 2466 90e8 

  0x00000274145e95f8: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [40]=Oop [64]=NarrowOop }
                      ;*astore {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::inflate@250 (line 410)
  0x00000274145e95f8: 048d a0ff 

  0x00000274145e95fc: ;   {internal_word}
  0x00000274145e95fc: 49ba 4e92 | 5e14 7402 | 0000 4d89 | 9760 0300 

  0x00000274145e960c: ;   {runtime_call SafepointBlob}
  0x00000274145e960c: 00e9 ee9d | a0ff f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x00000274145e9620: ;   {no_reloc}
  0x00000274145e9620: 48bb 0000 | 0000 0000 

  0x00000274145e9628: ;   {runtime_call}
  0x00000274145e9628: 0000 e9fb 

  0x00000274145e962c: ;   {static_stub}
  0x00000274145e962c: ffff ff48 | bb00 0000 | 0000 0000 

  0x00000274145e9638: ;   {runtime_call}
  0x00000274145e9638: 00e9 fbff 

  0x00000274145e963c: ;   {runtime_call ExceptionBlob}
  0x00000274145e963c: ffff e93d | b5aa ffe8 | 0000 0000 | 4883 2c24 

  0x00000274145e964c: ;   {runtime_call DeoptimizationBlob}
  0x00000274145e964c: 05e9 4e90 | a0ff f4f4 | f4f4 f4f4 
[/MachCode]


Compiled method (c2)    4707 6491       4       java.util.zip.ZipInputStream::read (304 bytes)
 total in heap  [0x0000027414893b10,0x0000027414895840] = 7472
 relocation     [0x0000027414893c68,0x0000027414893d00] = 152
 main code      [0x0000027414893d00,0x0000027414894da0] = 4256
 stub code      [0x0000027414894da0,0x0000027414894dd8] = 56
 metadata       [0x0000027414894dd8,0x0000027414894e80] = 168
 scopes data    [0x0000027414894e80,0x00000274148953d8] = 1368
 scopes pcs     [0x00000274148953d8,0x0000027414895738] = 864
 dependencies   [0x0000027414895738,0x0000027414895758] = 32
 handler table  [0x0000027414895758,0x00000274148957e8] = 144
 nul chk table  [0x00000274148957e8,0x0000027414895840] = 88

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x00000274693c26c0} 'read' '([BII)I' in 'java/util/zip/ZipInputStream'
  # this:     rdx:rdx   = 'java/util/zip/ZipInputStream'
  # parm0:    r8:r8     = '[B'
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0xa0]  (sp of caller)
  0x0000027414893d00: 448b 5208 | 49bb 0000 | 0028 7402 | 0000 4d03 | d349 3bc2 

  0x0000027414893d14: ;   {runtime_call ic_miss_stub}
  0x0000027414893d14: 0f85 668d | 75ff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x0000027414893d20: 8984 2400 | 90ff ff55 | 4881 ec90 | 0000 0048 | 8954 2420 | 0fb6 6a17 | 85ed 0f85 | 680a 0000 
  0x0000027414893d40: 4585 c90f | 8c1e 0a00 | 0085 ff0f | 8c37 0a00 | 0041 8b58 | 0c8b eb2b | ef44 3bcd | 0f8f 620a 
  0x0000027414893d60: 0000 85ff | 0f84 4008 | 0000 448b | 5a38 4585 | db0f 84f7 | 0700 0043 | 8b6c dc0c | 83fd 080f 
  0x0000027414893d80: 85f0 0700 | 000f b66a | 1485 ed0f | 854f 0a00 | 008b eb41 | 2be9 3bfd | 0f8f 5e0a | 0000 41ba 
  0x0000027414893da0: ffff ffff | 4c8b 5c24 | 2045 8b5b | 1845 85db | 0f84 2409 | 0000 4489 | 5424 3c89 | 5c24 3889 
  0x0000027414893dc0: 7c24 3444 | 894c 2430 | 4c89 4424 | 284b 8d14 | dc41 8be9 

  0x0000027414893dd4: ;   {optimized virtual_call}
  0x0000027414893dd4: c5f8 77e8 

  0x0000027414893dd8: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::read@53 (line 152)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414893dd8: 8451 d5ff | 8bd8 85c0 | 0f85 a806 | 0000 4c8b | 5424 2045 | 8b52 1847 | 8b44 d430 | 4585 c00f 
  0x0000027414893df8: 8403 0900 | 004f 8d0c | c448 8d9c | 2480 0000 | 0049 8b01 | 48f7 c002 | 0000 0075 | 2448 83c8 
  0x0000027414893e18: 0148 8903 | f049 0fb1 | 190f 843e | 0000 0048 | 2bc4 4881 | e007 f0ff | ff48 8903 | e92c 0000 
  0x0000027414893e38: 004c 8bc0 | 4833 c0f0 | 4d0f b178 | 3e48 c703 | 0300 0000 | 0f84 1300 | 0000 4c3b | f80f 850a 
  0x0000027414893e58: 0000 0049 | ff80 8600 | 0000 4833 | c00f 85cc | 0800 0043 | 0fb6 5cd4 | 2c48 8d84 | 2480 0000 
  0x0000027414893e78: 0048 8138 | 0000 0000 | 0f84 8300 | 0000 4d8b | 1149 f7c2 | 0200 0000 | 746f 4981 | ba86 0000 
  0x0000027414893e98: 0000 0000 | 0074 0949 | ff8a 8600 | 0000 eb51 | 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a 
  0x0000027414893eb8: 49c7 423e | 0000 0000 | eb47 4981 | ba9e 0000 | 0000 0000 | 0074 2548 | 33c0 49c7 | 423e 0000 
  0x0000027414893ed8: 0000 f083 | 0424 0049 | 81ba 9e00 | 0000 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb 
  0x0000027414893ef8: 10f7 c000 | 0000 00eb | 084c 8b10 | f04d 0fb1 | 110f 8505 | 0800 0085 | db0f 85fd | 0500 004c 
  0x0000027414893f18: 8b54 2420 | 458b 5a18 

  0x0000027414893f20: ; implicit exception: dispatches to 0x0000027414894c6c
  0x0000027414893f20: 478b 44dc | 3045 85c0 | 0f84 ea08 | 0000 4f8d | 0cc4 488d | 9c24 8000 | 0000 498b | 0148 f7c0 
  0x0000027414893f40: 0200 0000 | 7524 4883 | c801 4889 | 03f0 490f | b119 0f84 | 3e00 0000 | 482b c448 | 81e0 07f0 
  0x0000027414893f60: ffff 4889 | 03e9 2c00 | 0000 4c8b | c048 33c0 | f04d 0fb1 | 783e 48c7 | 0303 0000 | 000f 8413 
  0x0000027414893f80: 0000 004c | 3bf8 0f85 | 0a00 0000 | 49ff 8086 | 0000 0048 | 33c0 0f85 | e308 0000 | 430f b66c 
  0x0000027414893fa0: dc2d 488d | 8424 8000 | 0000 4881 | 3800 0000 | 000f 8483 | 0000 004d | 8b11 49f7 | c202 0000 
  0x0000027414893fc0: 0074 6f49 | 81ba 8600 | 0000 0000 | 0000 7409 | 49ff 8a86 | 0000 00eb | 5149 8b82 | 9600 0000 
  0x0000027414893fe0: 490b 828e | 0000 0075 | 0a49 c742 | 3e00 0000 | 00eb 4749 | 81ba 9e00 | 0000 0000 | 0000 7425 
  0x0000027414894000: 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4981 ba9e | 0000 0000 | 0000 0075 | 0df0 4d0f 
  0x0000027414894020: b17a 3e75 | 0583 c801 | eb10 f7c0 | 0000 0000 | eb08 4c8b | 10f0 4d0f | b111 0f85 | 1c08 0000 
  0x0000027414894040: 85ed 0f85 | be0a 0000 | 4c8b 5424 | 2041 8b4a | 1845 8b44 | cc30 4585 | c00f 84cd | 0700 004b 
  0x0000027414894060: 8d3c c448 | 8d9c 2480 | 0000 0048 | 8b07 48f7 | c002 0000 | 0075 2448 | 83c8 0148 | 8903 f048 
  0x0000027414894080: 0fb1 1f0f | 843e 0000 | 0048 2bc4 | 4881 e007 | f0ff ff48 | 8903 e92c | 0000 004c | 8bd0 4833 
  0x00000274148940a0: c0f0 4d0f | b17a 3e48 | c703 0300 | 0000 0f84 | 1300 0000 | 4c3b f80f | 850a 0000 | 0049 ff82 
  0x00000274148940c0: 8600 0000 | 4833 c00f | 85e2 0700 | 0045 8b54 | cc34 4585 | d275 2945 | 8b54 cc0c | 418b 6ccc 
  0x00000274148940e0: 2041 3bea | 742d ba45 | ffff ff44 | 8954 2450 | 4489 4424 | 5466 6690 

  0x00000274148940f8: ;   {runtime_call UncommonTrapBlob}
  0x00000274148940f8: c5f8 77e8 

  0x00000274148940fc: ; ImmutableOopMap {[32]=Oop [40]=Oop [84]=NarrowOop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.Inflater::needsInput@24 (line 303)
                      ; - java.util.zip.InflaterInputStream::read@93 (line 157)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x00000274148940fc: 00e2 75ff | 478b 4cd4 | 1c43 8b4c | d418 413b | c90f 8c25 | 0900 0048 | 8d84 2480 | 0000 0048 
  0x000002741489411c: 8138 0000 | 0000 0f84 | 8300 0000 | 4c8b 1749 | f7c2 0200 | 0000 746f | 4981 ba86 | 0000 0000 
  0x000002741489413c: 0000 0074 | 0949 ff8a | 8600 0000 | eb51 498b | 8296 0000 | 0049 0b82 | 8e00 0000 | 750a 49c7 
  0x000002741489415c: 423e 0000 | 0000 eb47 | 4981 ba9e | 0000 0000 | 0000 0074 | 2548 33c0 | 49c7 423e | 0000 0000 
  0x000002741489417c: f083 0424 | 0049 81ba | 9e00 0000 | 0000 0000 | 750d f04d | 0fb1 7a3e | 7505 83c8 | 01eb 10f7 
  0x000002741489419c: c000 0000 | 00eb 084c | 8b10 f04c | 0fb1 170f | 8536 0700 | 004c 8b54 | 2420 410f | b66a 1485 
  0x00000274148941bc: ed0f 8551 | 0900 0045 | 8b52 0c4c | 8b5c 2420 | 458b 431c 

  0x00000274148941d0: ; implicit exception: dispatches to 0x0000027414894c8c
  0x00000274148941d0: 438b 5cc4 | 0c47 8b5c 

  0x00000274148941d8: ;   {metadata('java/io/PushbackInputStream')}
  0x00000274148941d8: d408 4181 | fbd8 611d | 010f 8523 | 0700 004b | 8d34 d48b | 6e0c 85ed | 0f84 2e09 | 0000 85db 
  0x00000274148941f8: 0f86 4209 | 0000 448b | 5614 478b | 4cd4 0c8b | 6e10 418b | f92b fd4f | 8d2c c485 | ff7f 0889 
  0x0000027414894218: 7c24 5833 | ffeb 593b | df7d 028b | fb85 ed0f | 8c2f 0800 | 008b cf03 | cd44 3bc9 | 0f82 2208 
  0x0000027414894238: 0000 3bdf | 0f82 1a08 | 0000 85ff | 0f8c 1208 | 0000 85ff | 7421 4b8d | 54c4 1049 | c1e2 0349 
  0x0000027414894258: 8d4c 2a10 | 4c63 c7c5 | f877 49ba | 403a fd13 | 7402 0000 | 41ff d201 | 7e10 2bdf | 897c 2458 
  0x0000027414894278: 85db 7f06 | 8b7c 2458 | eb39 448b | 5e0c 498b | d348 c1e2 | 034d 8bc5 | 448b cf8b | fb8b 6c24 
  0x0000027414894298: 3090 c5f8 | 7748 b8ff | ffff ffff 

  0x00000274148942a4: ;   {virtual_call}
  0x00000274148942a4: ffff ffe8 

  0x00000274148942a8: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*invokevirtual read {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.FilterInputStream::read@7 (line 132)
                      ; - java.io.PushbackInputStream::read@116 (line 182)
                      ; - java.util.zip.InflaterInputStream::fill@19 (line 242)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x00000274148942a8: 44b5 80ff | 83f8 ff0f | 84d7 0800 | 008b 7c24 | 5803 f84c | 8b54 2420 | 4189 7a10 | 83ff ff0f 
  0x00000274148942c8: 848f 0800 | 0041 8b72 | 1845 8b52 | 1c45 8b5c | f430 85ff | 0f8c 9e07 | 0000 438b | 6cd4 0c2b 
  0x00000274148942e8: ef85 ed0f | 8c7f 0800 | 0045 85db | 0f84 4605 | 0000 4d8d | 04f4 4f8d | 2cdc 4b8d | 2cd4 488d 
  0x0000027414894308: 9c24 8000 | 0000 498b | 4500 48f7 | c002 0000 | 0075 2548 | 83c8 0148 | 8903 f049 | 0fb1 5d00 
  0x0000027414894328: 0f84 3e00 | 0000 482b | c448 81e0 | 07f0 ffff | 4889 03e9 | 2c00 0000 | 4c8b d848 | 33c0 f04d 
  0x0000027414894348: 0fb1 7b3e | 48c7 0303 | 0000 000f | 8413 0000 | 004c 3bf8 | 0f85 0a00 | 0000 49ff | 8386 0000 
  0x0000027414894368: 0048 33c0 | 0f85 b605 | 0000 4180 | 7f38 000f | 8569 0200 | 0041 807f | 3800 0f85 | 2602 0000 
  0x0000027414894388: 4589 54f4 | 3845 8964 | f434 4c8b | d54d 8bd8 | 4d33 d349 | c1ea 154d | 85d2 741a | 49c1 eb09 
  0x00000274148943a8: 48b9 0000 | f218 7402 | 0000 4903 | cb80 3904 | 0f85 6002 | 0000 4189 | 7cf4 2045 | 8964 f40c 
  0x00000274148943c8: 488d 8424 | 8000 0000 | 4881 3800 | 0000 000f | 8485 0000 | 004d 8b55 | 0049 f7c2 | 0200 0000 
  0x00000274148943e8: 746f 4981 | ba86 0000 | 0000 0000 | 0074 0949 | ff8a 8600 | 0000 eb51 | 498b 8296 | 0000 0049 
  0x0000027414894408: 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb48 4981 | ba9e 0000 | 0000 0000 | 0074 2548 
  0x0000027414894428: 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 81ba 9e00 | 0000 0000 | 0000 750d | f04d 0fb1 
  0x0000027414894448: 7a3e 7505 | 83c8 01eb | 11f7 c000 | 0000 00eb | 094c 8b10 | f04d 0fb1 | 5500 0f85 | 0805 0000 
  0x0000027414894468: 4d8b 9f50 

  0x000002741489446c: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.InflaterInputStream::read@103 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
                      ;   {poll}
  0x000002741489446c: 0300 0041 | 8503 4c8b | 4424 2844 | 8b4c 2430 | 8b7c 2434 | 8b5c 2438 | 448b 5424 | 3ce9 16f9 
  0x000002741489448c: ffff 83f8 | ff74 764c | 8b54 2420 | 418b 7a3c 

  0x000002741489449c: ; implicit exception: dispatches to 0x0000027414894c44
  0x000002741489449c: 418b 4cfc | 0c85 c00f | 8cea 0400 | 008b 6c24 | 382b e844 | 8b54 2430 | 443b d50f | 8f03 0500 
  0x00000274148944bc: 0085 c00f | 8e13 0500 | 0044 3b54 | 2438 0f83 | 2805 0000 | 418b ea03 | e8ff cd3b | 6c24 380f 
  0x00000274148944dc: 8337 0500 | 004c 8b5c | 2428 4b8d | 5413 1044 | 8bc0 c5f8 | 7749 bac0 | 12fa 1374 | 0200 0041 
  0x00000274148944fc: ffd2 4189 | 44fc 0c89 | 5c24 3ceb | 484c 8b54 | 2420 458b | 5238 eb0e | 4c8b 5424 | 2041 c642 
  0x000002741489451c: 1501 458b | 5238 4d8b | c249 c1e0 | 0348 8b54 | 2420 6690 

  0x0000027414894530: ;   {optimized virtual_call}
  0x0000027414894530: c5f8 77e8 

  0x0000027414894534: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual readEnd {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.ZipInputStream::read@94 (line 198)
  0x0000027414894534: 8894 dbf8 | 4180 7f38 | 000f 8524 | 0100 004c | 8b54 2420 | 41c6 4234 | 0145 8962 | 388b 4424 
  0x0000027414894554: 3cc5 f877 | 4881 c490 | 0000 005d 

  0x0000027414894560: ;   {poll_return}
  0x0000027414894560: 493b a748 | 0300 000f | 870b 0800 | 00c3 b8ff | ffff ffeb | e085 ed0f | 853b 0600 | 004c 8b52 
  0x0000027414894580: 284d 85d2 | 0f8f 6206 | 0000 4180 | 7f38 000f | 850e 0100 | 004c 8b54 | 2420 4589 | 6238 41c6 
  0x00000274148945a0: 4234 01b8 | ffff ffff | ebab 33c0 | eba7 458b | 5cf4 3845 | 85db 0f84 | ccfd ffff | 4d8b 4f20 
  0x00000274148945c0: 498b cb48 | c1e1 034d | 85c9 0f84 | cc04 0000 | 4d8b 5f30 | 4b89 4c0b | f849 83c1 | f84d 894f 
  0x00000274148945e0: 20e9 a2fd | ffff 458b | 5cf4 3445 | 85db 0f84 | 89fd ffff | 4d8b 4f20 | 498b cb48 | c1e1 034d 
  0x0000027414894600: 85c9 0f84 | c604 0000 | 4d8b 5f30 | 4b89 4c0b | f849 83c1 | f84d 894f | 20e9 5ffd | ffff 4d8b 
  0x0000027414894620: 5740 4d8b | 5f50 f083 | 4424 c000 | 8039 000f | 8489 fdff | ff44 8821 | 4d85 d275 | 1849 8bd7 
  0x0000027414894640: c5f8 7749 | ba00 11d2 | 26fe 7f00 | 0041 ffd2 | e969 fdff | ff4b 894c | 13f8 4983 | c2f8 4d89 
  0x0000027414894660: 5740 e957 | fdff ff4c | 8b54 2420 | 458b 5a38 | 4585 db0f | 84ca feff | ff4d 8b57 | 2049 8bcb 
  0x0000027414894680: 48c1 e103 | 4d85 d20f | 8413 0500 | 004d 8b5f | 304b 894c | 13f8 4983 | c2f8 4d89 | 5720 e9a0 
  0x00000274148946a0: feff ff44 | 8b5a 3845 | 85db 0f84 | e5fe ffff | 4d8b 5720 | 498b cb48 | c1e1 034d | 85d2 0f84 
  0x00000274148946c0: 1005 0000 | 4d8b 5f30 | 4b89 4c13 | f849 83c2 | f84d 8957 | 20e9 bbfe | ffff baf6 | ffff ff4c 
  0x00000274148946e0: 8944 2438 | 4489 4c24 | 344c 8944 | 2448 4489 | 4c24 4489 | 7c24 5090 

  0x00000274148946f8: ;   {runtime_call UncommonTrapBlob}
  0x00000274148946f8: c5f8 77e8 

  0x00000274148946fc: ; ImmutableOopMap {[32]=Oop [56]=Oop [72]=Oop }
                      ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::read@53 (line 152)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x00000274148946fc: 00dc 75ff | baf6 ffff | ff44 8954 | 2444 6690 

  0x000002741489470c: ;   {runtime_call UncommonTrapBlob}
  0x000002741489470c: c5f8 77e8 

  0x0000027414894710: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::finished@6 (line 325)
                      ; - java.util.zip.InflaterInputStream::read@66 (line 153)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894710: ecdb 75ff | 498b c948 | 8d94 2480 | 0000 004d | 8bc7 c5f8 | 7749 baf0 | d412 27fe | 7f00 0041 
  0x0000027414894730: ffd2 e9d8 | f7ff ff4c | 894c 2448 | 4b8d 2cd4 | 4489 5424 | 4049 8bd1 | 4c8d 8424 | 8000 0000 
  0x0000027414894750: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000027414894750: c5f8 77e8 

  0x0000027414894754: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [64]=NarrowOop [72]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::finished@6 (line 325)
                      ; - java.util.zip.InflaterInputStream::read@66 (line 153)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894754: 288a 80ff | 448b 5424 | 404c 8b4c | 2448 e904 | f7ff ffba | 45ff ffff | 488b 6c24 | 204c 8944 
  0x0000027414894774: 2420 897c | 242c 4489 | 4c24 3090 

  0x0000027414894780: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894780: c5f8 77e8 

  0x0000027414894784: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.ZipInputStream::read@5 (line 185)
  0x0000027414894784: 78db 75ff | ba45 ffff | ff48 8b6c | 2420 4c89 | 4424 2044 | 894c 2428 | 897c 2430 

  0x00000274148947a0: ;   {runtime_call UncommonTrapBlob}
  0x00000274148947a0: c5f8 77e8 

  0x00000274148947a4: ; ImmutableOopMap {rbp=Oop [32]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.ZipInputStream::read@9 (line 185)
  0x00000274148947a4: 58db 75ff | ba45 ffff | ff4c 8944 | 2428 4489 | 4c24 3089 | 7c24 3490 

  0x00000274148947bc: ;   {runtime_call UncommonTrapBlob}
  0x00000274148947bc: c5f8 77e8 

  0x00000274148947c0: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.ZipInputStream::ensureOpen@4 (line 68)
                      ; - java.util.zip.ZipInputStream::read@1 (line 184)
  0x00000274148947c0: 3cdb 75ff | ba45 ffff | ff4c 8944 | 2428 897c | 2434 4489 | 4c24 3890 

  0x00000274148947d8: ;   {runtime_call UncommonTrapBlob}
  0x00000274148947d8: c5f8 77e8 

  0x00000274148947dc: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.ZipInputStream::read@17 (line 185)
  0x00000274148947dc: 20db 75ff | ba45 ffff | ff4c 8944 | 2440 4489 | 4c24 3489 | 7c24 4890 

  0x00000274148947f4: ;   {runtime_call UncommonTrapBlob}
  0x00000274148947f4: c5f8 77e8 

  0x00000274148947f8: ; ImmutableOopMap {[32]=Oop [64]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.InflaterInputStream::ensureOpen@4 (line 66)
                      ; - java.util.zip.InflaterInputStream::read@1 (line 142)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x00000274148947f8: 04db 75ff | ba45 ffff | ff4c 8944 | 2440 4489 | 4c24 3489 | 7c24 4c90 

  0x0000027414894810: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894810: c5f8 77e8 

  0x0000027414894814: ; ImmutableOopMap {[32]=Oop [64]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.InflaterInputStream::read@29 (line 145)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894814: e8da 75ff | baf6 ffff | ff44 895c | 2444 6690 

  0x0000027414894824: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894824: c5f8 77e8 

  0x0000027414894828: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::needsDictionary@6 (line 313)
                      ; - java.util.zip.InflaterInputStream::read@76 (line 153)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894828: d4da 75ff | baf6 ffff | ff89 4c24 | 4466 6690 

  0x0000027414894838: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894838: c5f8 77e8 

  0x000002741489483c: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::needsInput@6 (line 301)
                      ; - java.util.zip.InflaterInputStream::read@93 (line 157)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x000002741489483c: c0da 75ff | baf6 ffff | ff89 7424 | 4444 8954 | 2448 897c | 244c 6690 

  0x0000027414894854: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894854: c5f8 77e8 

  0x0000027414894858: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop [72]=NarrowOop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::setInput@31 (line 157)
                      ; - java.util.zip.InflaterInputStream::fill@56 (line 246)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894858: a4da 75ff | 498b c948 | 8d94 2480 | 0000 004d | 8bc7 c5f8 | 7749 baf0 | d412 27fe | 7f00 0041 
  0x0000027414894878: ffd2 e9c1 | f7ff ff4c | 894c 2448 | 4b8d 2cdc | 4489 5c24 | 4049 8bd1 | 4c8d 8424 | 8000 0000 
  0x0000027414894898: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000027414894898: c5f8 77e8 

  0x000002741489489c: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [64]=NarrowOop [72]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::needsDictionary@6 (line 313)
                      ; - java.util.zip.InflaterInputStream::read@76 (line 153)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x000002741489489c: e088 80ff | 448b 5c24 | 404c 8b4c | 2448 e9ed | f6ff ff48 | 897c 2448 | 4489 4424 | 4449 8d2c 
  0x00000274148948bc: cc89 4c24 | 4048 8bd7 | 4c8d 8424 | 8000 0000 

  0x00000274148948cc: ;   {runtime_call _complete_monitor_locking_Java}
  0x00000274148948cc: c5f8 77e8 

  0x00000274148948d0: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [64]=NarrowOop [68]=NarrowOop [72]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::needsInput@6 (line 301)
                      ; - java.util.zip.InflaterInputStream::read@93 (line 157)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x00000274148948d0: ac88 80ff | 8b4c 2440 | 448b 4424 | 4448 8b7c | 2448 e9e6 | f7ff ff48 | 8bcf 488d | 9424 8000 
  0x00000274148948f0: 0000 4d8b | c7c5 f877 | 49ba f0d4 | 1227 fe7f | 0000 41ff | d2e9 a7f8 | ffff bade | ffff ff44 
  0x0000027414894910: 8954 2444 | 4489 4424 | 5889 5c24 | 5c66 6690 

  0x0000027414894920: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894920: c5f8 77e8 

  0x0000027414894924: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop [88]=NarrowOop }
                      ;*invokevirtual read {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::fill@19 (line 242)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894924: d8d9 75ff | 4c89 6c24 | 584c 8944 | 2450 4489 | 5424 4889 | 7424 4489 | 7c24 4049 | 8bd5 4c8d 
  0x0000027414894944: 8424 8000 | 0000 6690 

  0x000002741489494c: ;   {runtime_call _complete_monitor_locking_Java}
  0x000002741489494c: c5f8 77e8 

  0x0000027414894950: ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [68]=NarrowOop [72]=NarrowOop [80]=Oop [88]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::setInput@31 (line 157)
                      ; - java.util.zip.InflaterInputStream::fill@56 (line 246)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894950: 2c88 80ff | 8b7c 2440 | 8b74 2444 | 448b 5424 | 484c 8b44 | 2450 4c8b | 6c24 58e9 | 02fa ffff 
  0x0000027414894970: 498b cd48 | 8d94 2480 | 0000 004d | 8bc7 c5f8 | 7749 baf0 | d412 27fe | 7f00 0041 | ffd2 e9d5 
  0x0000027414894990: faff ffba | 45ff ffff | 897c 2420 | 4889 4424 | f88b 4424 | 3089 4424 | 2448 8b44 | 24f8 8944 
  0x00000274148949b0: 2430 8944 | 2434 6690 

  0x00000274148949b8: ;   {runtime_call UncommonTrapBlob}
  0x00000274148949b8: c5f8 77e8 

  0x00000274148949bc: ; ImmutableOopMap {[32]=NarrowOop [40]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.CRC32::update@17 (line 76)
                      ; - java.util.zip.ZipInputStream::read@117 (line 202)
  0x00000274148949bc: 40d9 75ff | ba45 ffff | ff89 7c24 | 2489 4424 | 3466 6690 

  0x00000274148949d0: ;   {runtime_call UncommonTrapBlob}
  0x00000274148949d0: c5f8 77e8 

  0x00000274148949d4: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.CRC32::update@25 (line 76)
                      ; - java.util.zip.ZipInputStream::read@117 (line 202)
  0x00000274148949d4: 28d9 75ff | ba45 ffff | ff89 7c24 | 2089 4c24 | 2489 4424 | 3489 4424 | 4466 6690 

  0x00000274148949f0: ;   {runtime_call UncommonTrapBlob}
  0x00000274148949f0: c5f8 77e8 

  0x00000274148949f4: ; ImmutableOopMap {[32]=NarrowOop [40]=Oop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.CRC32::updateBytesCheck@1 (line 146)
                      ; - java.util.zip.CRC32::updateBytes@3 (line 138)
                      ; - java.util.zip.CRC32::update@44 (line 79)
                      ; - java.util.zip.ZipInputStream::read@117 (line 202)
  0x00000274148949f4: 08d9 75ff | bae5 ffff | ff89 7c24 | 2089 4c24 | 2489 4424 | 3489 4424 | 4466 6690 

  0x0000027414894a10: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894a10: c5f8 77e8 

  0x0000027414894a14: ; ImmutableOopMap {[32]=NarrowOop [40]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.CRC32::updateBytesCheck@11 (line 152)
                      ; - java.util.zip.CRC32::updateBytes@3 (line 138)
                      ; - java.util.zip.CRC32::update@44 (line 79)
                      ; - java.util.zip.ZipInputStream::read@117 (line 202)
  0x0000027414894a14: e8d8 75ff | bae5 ffff | ff89 7c24 | 2489 4c24 | 3044 8954 | 2434 8944 | 2438 6690 

  0x0000027414894a30: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894a30: c5f8 77e8 

  0x0000027414894a34: ; ImmutableOopMap {[36]=NarrowOop [40]=Oop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.CRC32::updateBytesCheck@36 (line 157)
                      ; - java.util.zip.CRC32::updateBytes@3 (line 138)
                      ; - java.util.zip.CRC32::update@44 (line 79)
                      ; - java.util.zip.ZipInputStream::read@117 (line 202)
  0x0000027414894a34: c8d8 75ff | bd01 0000 | 0045 33db | 413b c941 | 0f4d ebba | 45ff ffff | 4489 4424 | 5066 6690 
  0x0000027414894a54: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894a54: c5f8 77e8 

  0x0000027414894a58: ; ImmutableOopMap {[32]=Oop [40]=Oop [80]=NarrowOop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.Inflater::needsInput@39 (line 303)
                      ; - java.util.zip.InflaterInputStream::read@93 (line 157)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894a58: a4d8 75ff | bacc ffff | ff48 8974 | 2460 895c | 2468 4489 | 5424 7044 | 8944 2474 | 897c 2478 
  0x0000027414894a78: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894a78: c5f8 77e8 

  0x0000027414894a7c: ; ImmutableOopMap {[32]=Oop [40]=Oop [96]=Oop [112]=NarrowOop [116]=NarrowOop }
                      ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.PushbackInputStream::read@84 (line 176)
                      ; - java.util.zip.InflaterInputStream::fill@19 (line 242)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894a7c: 80d8 75ff | ba45 ffff | ff89 7424 | 4444 8954 | 2448 897c | 2450 6690 

  0x0000027414894a94: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894a94: c5f8 77e8 

  0x0000027414894a98: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop [72]=NarrowOop }
                      ;*iflt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.Inflater::setInput@5 (line 154)
                      ; - java.util.zip.InflaterInputStream::fill@56 (line 246)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894a98: 64d8 75ff | 4c89 6c24 | 484c 8944 | 2440 458b | f249 8bd7 | c5f8 7749 | ba20 11d2 | 26fe 7f00 
  0x0000027414894ab8: 0041 ffd2 | 458b d64c | 8b44 2440 | 4c8b 6c24 | 48e9 baf8 | ffff 4c89 | 6c24 484c | 8944 2440 
  0x0000027414894ad8: 458b f244 | 8bee 498b | d7c5 f877 | 49ba 2011 | d226 fe7f | 0000 41ff | d241 8bf5 | 458b d64c 
  0x0000027414894af8: 8b44 2440 | 4c8b 6c24 | 48e9 77f8 | ffff ba45 | ffff ff90 

  0x0000027414894b0c: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894b0c: c5f8 77e8 

  0x0000027414894b10: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.InflaterInputStream::read@79 (line 153)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894b10: ecd7 75ff | ba45 ffff | ff66 6690 

  0x0000027414894b1c: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894b1c: c5f8 77e8 

  0x0000027414894b20: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.InflaterInputStream::ensureOpen@4 (line 66)
                      ; - java.util.zip.InflaterInputStream::fill@1 (line 241)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894b20: dcd7 75ff | ba45 ffff | ff48 8974 | 2460 4489 | 4424 4c89 | 5c24 6890 

  0x0000027414894b38: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894b38: c5f8 77e8 

  0x0000027414894b3c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [40]=Oop [76]=NarrowOop [96]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.PushbackInputStream::ensureOpen@4 (line 73)
                      ; - java.io.PushbackInputStream::read@1 (line 162)
                      ; - java.util.zip.InflaterInputStream::fill@19 (line 242)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894b3c: c0d7 75ff | ba45 ffff | ff48 8974 | 2458 4489 | 4424 4489 | 5c24 6490 

  0x0000027414894b54: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894b54: c5f8 77e8 

  0x0000027414894b58: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop [88]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.PushbackInputStream::read@41 (line 167)
                      ; - java.util.zip.InflaterInputStream::fill@19 (line 242)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894b58: a4d7 75ff | ba45 ffff | ff89 7c24 | 4466 6690 

  0x0000027414894b68: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894b68: c5f8 77e8 

  0x0000027414894b6c: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.InflaterInputStream::fill@30 (line 243)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894b6c: 90d7 75ff | ba45 ffff | ff89 7424 | 4c44 8954 | 2450 897c | 2454 6690 

  0x0000027414894b84: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894b84: c5f8 77e8 

  0x0000027414894b88: ; ImmutableOopMap {[32]=Oop [40]=Oop [76]=NarrowOop [80]=NarrowOop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.Inflater::setInput@13 (line 154)
                      ; - java.util.zip.InflaterInputStream::fill@56 (line 246)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894b88: 74d7 75ff | ba45 ffff | ff89 4424 | 5c66 6690 

  0x0000027414894b98: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894b98: c5f8 77e8 

  0x0000027414894b9c: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*if_icmpne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.PushbackInputStream::read@122 (line 183)
                      ; - java.util.zip.InflaterInputStream::fill@19 (line 242)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894b9c: 60d7 75ff | 498b d7c5 | f877 49ba | 2011 d226 | fe7f 0000 | 41ff d2e9 | 8bf9 ffff | ba45 ffff 
  0x0000027414894bbc: ff4c 8944 | 2428 4489 | 4c24 3089 | 7c24 3490 

  0x0000027414894bcc: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894bcc: c5f8 77e8 

  0x0000027414894bd0: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*lookupswitch {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.ZipInputStream::read@50 (line 194)
  0x0000027414894bd0: 2cd7 75ff | 498b d7c5 | f877 49ba | 2011 d226 | fe7f 0000 | 41ff d2e9 | a9f9 ffff | ba45 ffff 
  0x0000027414894bf0: ff45 33db | 4d3b d3bd | ffff ffff | 7c08 400f | 95c5 400f | b6ed 4c89 | 4424 2844 | 894c 2430 
  0x0000027414894c10: 897c 2434 

  0x0000027414894c14: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894c14: c5f8 77e8 

  0x0000027414894c18: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.ZipInputStream::read@128 (line 206)
  0x0000027414894c18: e4d6 75ff | 488b d090 

  0x0000027414894c20: ;   {runtime_call _rethrow_Java}
  0x0000027414894c20: c5f8 77e8 

  0x0000027414894c24: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*invokevirtual inflate {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.zip.InflaterInputStream::read@53 (line 152)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894c24: d8e1 80ff | 488b d090 

  0x0000027414894c2c: ;   {runtime_call _rethrow_Java}
  0x0000027414894c2c: c5f8 77e8 

  0x0000027414894c30: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*invokevirtual fill {reexecute=0 rethrow=0 return_oop=1}
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894c30: cce1 80ff | baf6 ffff | ff66 6690 

  0x0000027414894c3c: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894c3c: c5f8 77e8 

  0x0000027414894c40: ; ImmutableOopMap {}
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.ZipInputStream::read@14 (line 185)
  0x0000027414894c40: bcd6 75ff | baf6 ffff | ff48 8b6c | 2428 8944 | 2424 6690 

  0x0000027414894c54: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894c54: c5f8 77e8 

  0x0000027414894c58: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual update {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.ZipInputStream::read@117 (line 202)
  0x0000027414894c58: a4d6 75ff | baf6 ffff | ff66 6690 

  0x0000027414894c64: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894c64: c5f8 77e8 

  0x0000027414894c68: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*invokevirtual finished {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::read@66 (line 153)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894c68: 94d6 75ff | baf6 ffff | ff66 6690 

  0x0000027414894c74: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894c74: c5f8 77e8 

  0x0000027414894c78: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*invokevirtual needsDictionary {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::read@76 (line 153)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894c78: 84d6 75ff | baf6 ffff | ff66 6690 

  0x0000027414894c84: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894c84: c5f8 77e8 

  0x0000027414894c88: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*invokevirtual needsInput {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::read@93 (line 157)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894c88: 74d6 75ff | baf6 ffff | ff66 6690 

  0x0000027414894c94: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894c94: c5f8 77e8 

  0x0000027414894c98: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::fill@18 (line 242)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894c98: 64d6 75ff | baf6 ffff | ff44 8944 | 2444 895c | 2448 6690 

  0x0000027414894cac: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894cac: c5f8 77e8 

  0x0000027414894cb0: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop }
                      ;*invokevirtual read {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::fill@19 (line 242)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894cb0: 4cd6 75ff | baf6 ffff | ff66 6690 

  0x0000027414894cbc: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894cbc: c5f8 77e8 

  0x0000027414894cc0: ; ImmutableOopMap {[32]=Oop [40]=Oop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.PushbackInputStream::read@50 (line 171)
                      ; - java.util.zip.InflaterInputStream::fill@19 (line 242)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894cc0: 3cd6 75ff | baf6 ffff | ff44 8954 | 2444 897c | 2448 6690 

  0x0000027414894cd4: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894cd4: c5f8 77e8 

  0x0000027414894cd8: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop }
                      ;*invokevirtual setInput {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::fill@56 (line 246)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894cd8: 24d6 75ff | baf6 ffff | ff89 7424 | 4489 7c24 | 4866 6690 

  0x0000027414894cec: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894cec: c5f8 77e8 

  0x0000027414894cf0: ; ImmutableOopMap {[32]=Oop [40]=Oop [68]=NarrowOop }
                      ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::setInput@10 (line 154)
                      ; - java.util.zip.InflaterInputStream::fill@56 (line 246)
                      ; - java.util.zip.InflaterInputStream::read@100 (line 158)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894cf0: 0cd6 75ff | bab5 ffff | ff48 8b6c | 2420 48ff | 7424 2848 | 8f44 2420 | 4889 4424 | f88b 4424 
  0x0000027414894d10: 3089 4424 | 2848 8b44 | 24f8 4889 | 4424 3090 

  0x0000027414894d20: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894d20: c5f8 77e8 

  0x0000027414894d24: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop }
                      ;*astore {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::read@109 (line 162)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894d24: d8d5 75ff | eb00 488b | d0eb 0348 | 8bd0 c5f8 | 7748 81c4 | 9000 0000 

  0x0000027414894d3c: ;   {runtime_call _rethrow_Java}
  0x0000027414894d3c: 5de9 bee0 | 80ff bab5 | ffff ff48 | 8b6c 2420 | 48ff 7424 | 2848 8f44 | 2420 4889 | 4424 f88b 
  0x0000027414894d5c: 4424 3089 | 4424 2848 | 8b44 24f8 | 4889 4424 | 3066 6690 

  0x0000027414894d70: ;   {runtime_call UncommonTrapBlob}
  0x0000027414894d70: c5f8 77e8 

  0x0000027414894d74: ; ImmutableOopMap {rbp=Oop [32]=Oop [48]=Oop }
                      ;*astore {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::read@109 (line 162)
                      ; - java.util.zip.ZipInputStream::read@80 (line 196)
  0x0000027414894d74: 88d5 75ff 

  0x0000027414894d78: ;   {internal_word}
  0x0000027414894d78: 49ba 6045 | 8914 7402 | 0000 4d89 | 9760 0300 

  0x0000027414894d88: ;   {runtime_call SafepointBlob}
  0x0000027414894d88: 00e9 72e6 | 75ff f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x0000027414894da0: ;   {no_reloc}
  0x0000027414894da0: 48bb 0000 | 0000 0000 

  0x0000027414894da8: ;   {runtime_call}
  0x0000027414894da8: 0000 e9fb 

  0x0000027414894dac: ;   {static_stub}
  0x0000027414894dac: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000027414894db8: ;   {runtime_call}
  0x0000027414894db8: 00e9 fbff 

  0x0000027414894dbc: ;   {runtime_call ExceptionBlob}
  0x0000027414894dbc: ffff e9bd | fd7f ffe8 | 0000 0000 | 4883 2c24 

  0x0000027414894dcc: ;   {runtime_call DeoptimizationBlob}
  0x0000027414894dcc: 05e9 ced8 | 75ff f4f4 | f4f4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x000002746d9c9300, length=14, elements={
0x00000274051c07c0, 0x0000027427e4a6e0, 0x0000027427e4b360, 0x0000027427e60c80,
0x0000027427e61640, 0x0000027427e62000, 0x0000027427e629c0, 0x0000027427e6b6c0,
0x0000027427e71600, 0x0000027427e6f980, 0x000002746d13d9c0, 0x000002746d1462f0,
0x000002746d652e70, 0x000002746db41150
}

Java Threads: ( => current thread )
=>0x00000274051c07c0 JavaThread "main" [_thread_in_native, id=7900, stack(0x000000a058000000,0x000000a058100000)]
  0x0000027427e4a6e0 JavaThread "Reference Handler" daemon [_thread_blocked, id=6676, stack(0x000000a058700000,0x000000a058800000)]
  0x0000027427e4b360 JavaThread "Finalizer" daemon [_thread_blocked, id=6668, stack(0x000000a058800000,0x000000a058900000)]
  0x0000027427e60c80 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=6664, stack(0x000000a058900000,0x000000a058a00000)]
  0x0000027427e61640 JavaThread "Attach Listener" daemon [_thread_blocked, id=7276, stack(0x000000a058a00000,0x000000a058b00000)]
  0x0000027427e62000 JavaThread "Service Thread" daemon [_thread_blocked, id=6060, stack(0x000000a058b00000,0x000000a058c00000)]
  0x0000027427e629c0 JavaThread "Monitor Deflation Thread" daemon [_thread_blocked, id=7412, stack(0x000000a058c00000,0x000000a058d00000)]
  0x0000027427e6b6c0 JavaThread "C2 CompilerThread0" daemon [_thread_blocked, id=6088, stack(0x000000a058d00000,0x000000a058e00000)]
  0x0000027427e71600 JavaThread "C1 CompilerThread0" daemon [_thread_blocked, id=6840, stack(0x000000a058e00000,0x000000a058f00000)]
  0x0000027427e6f980 JavaThread "Sweeper thread" daemon [_thread_blocked, id=6044, stack(0x000000a058f00000,0x000000a059000000)]
  0x000002746d13d9c0 JavaThread "Notification Thread" daemon [_thread_blocked, id=868, stack(0x000000a059000000,0x000000a059100000)]
  0x000002746d1462f0 JavaThread "Common-Cleaner" daemon [_thread_blocked, id=5744, stack(0x000000a059200000,0x000000a059300000)]
  0x000002746d652e70 JavaThread "C2 CompilerThread1" daemon [_thread_blocked, id=5500, stack(0x000000a059300000,0x000000a059400000)]
  0x000002746db41150 JavaThread "C2 CompilerThread2" daemon [_thread_blocked, id=6320, stack(0x000000a059400000,0x000000a059500000)]

Other Threads:
  0x0000027427e43bc0 VMThread "VM Thread" [stack: 0x000000a058600000,0x000000a058700000] [id=6636]
  0x0000027405248950 WatcherThread [stack: 0x000000a059100000,0x000000a059200000] [id=6968]
  0x00000274052297c0 GCTaskThread "GC Thread#0" [stack: 0x000000a058100000,0x000000a058200000] [id=2092]
  0x000002746db41a70 GCTaskThread "GC Thread#1" [stack: 0x000000a059500000,0x000000a059600000] [id=6584]
  0x000002746e43ac70 GCTaskThread "GC Thread#2" [stack: 0x000000a059600000,0x000000a059700000] [id=6444]
  0x000002746d1e9c10 GCTaskThread "GC Thread#3" [stack: 0x000000a059700000,0x000000a059800000] [id=5912]
  0x000002746dc7f370 GCTaskThread "GC Thread#4" [stack: 0x000000a059800000,0x000000a059900000] [id=6572]
  0x000002746e0280f0 GCTaskThread "GC Thread#5" [stack: 0x000000a059900000,0x000000a059a00000] [id=6428]
  0x000002746d9a4e90 GCTaskThread "GC Thread#6" [stack: 0x000000a059a00000,0x000000a059b00000] [id=6312]
  0x000002746e1a2010 GCTaskThread "GC Thread#7" [stack: 0x000000a059b00000,0x000000a059c00000] [id=6520]
  0x000002746dc17db0 GCTaskThread "GC Thread#8" [stack: 0x000000a059c00000,0x000000a059d00000] [id=6416]
  0x000002746dd853d0 GCTaskThread "GC Thread#9" [stack: 0x000000a059d00000,0x000000a059e00000] [id=6152]
  0x000002740523bd30 ConcurrentGCThread "G1 Main Marker" [stack: 0x000000a058200000,0x000000a058300000] [id=6680]
  0x000002740523c740 ConcurrentGCThread "G1 Conc#0" [stack: 0x000000a058300000,0x000000a058400000] [id=6644]
  0x000002746dc690b0 ConcurrentGCThread "G1 Conc#1" [stack: 0x000000a059e00000,0x000000a059f00000] [id=6324]
  0x000002746e709b60 ConcurrentGCThread "G1 Conc#2" [stack: 0x000000a059f00000,0x000000a05a000000] [id=6440]
  0x000002740529d8a0 ConcurrentGCThread "G1 Refine#0" [stack: 0x000000a058400000,0x000000a058500000] [id=6640]
  0x000002746f2249a0 ConcurrentGCThread "G1 Refine#1" [stack: 0x000000a05a000000,0x000000a05a100000] [id=6580]
  0x000002746f225b40 ConcurrentGCThread "G1 Refine#2" [stack: 0x000000a05a100000,0x000000a05a200000] [id=6452]
  0x000002746ff7bef0 ConcurrentGCThread "G1 Refine#3" [stack: 0x000000a05a200000,0x000000a05a300000] [id=5724]
  0x000002746ff7a770 ConcurrentGCThread "G1 Refine#4" [stack: 0x000000a05a300000,0x000000a05a400000] [id=6424]
  0x000002746ff7aa60 ConcurrentGCThread "G1 Refine#5" [stack: 0x000000a05a400000,0x000000a05a500000] [id=6576]
  0x000002746ff795d0 ConcurrentGCThread "G1 Refine#6" [stack: 0x000000a05a500000,0x000000a05a600000] [id=6508]
  0x000002740529e1d0 ConcurrentGCThread "G1 Service" [stack: 0x000000a058500000,0x000000a058600000] [id=3432]

Threads with active compile tasks:

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread: None

Heap address: 0x000000070a000000, size: 3936 MB, Compressed Oops mode: Zero based, Oop shift amount: 3

CDS archive(s) mapped at: [0x0000027428000000-0x0000027428bd0000-0x0000027428bd0000), size 12386304, SharedBaseAddress: 0x0000027428000000, ArchiveRelocationMode: 1.
Compressed class space mapped at: 0x0000027429000000-0x0000027469000000, reserved size: 1073741824
Narrow klass base: 0x0000027428000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CPUs: 12 total, 12 available
 Memory: 15740M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (Zero based)
 Heap Region Size: 2M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 246M
 Heap Max Capacity: 3936M
 Pre-touch: Disabled
 Parallel Workers: 10
 Concurrent Workers: 3
 Concurrent Refinement Workers: 10
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 190464K, used 56030K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 2 survivors (4096K)
 Metaspace       used 30381K, committed 30784K, reserved 1114112K
  class space    used 3454K, committed 3648K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, OA=open archive, CA=closed archive, TAMS=top-at-mark-start (previous, next)
|   0|0x000000070a000000, 0x000000070a200000, 0x000000070a200000|100%| O|  |TAMS 0x000000070a200000, 0x000000070a000000| Untracked 
|   1|0x000000070a200000, 0x000000070a400000, 0x000000070a400000|100%| O|  |TAMS 0x000000070a400000, 0x000000070a200000| Untracked 
|   2|0x000000070a400000, 0x000000070a600000, 0x000000070a600000|100%| O|  |TAMS 0x000000070a600000, 0x000000070a400000| Untracked 
|   3|0x000000070a600000, 0x000000070a800000, 0x000000070a800000|100%|HS|  |TAMS 0x000000070a800000, 0x000000070a600000| Complete 
|   4|0x000000070a800000, 0x000000070aa00000, 0x000000070aa00000|100%| O|  |TAMS 0x000000070aa00000, 0x000000070a800000| Complete 
|   5|0x000000070aa00000, 0x000000070ac00000, 0x000000070ac00000|100%| O|  |TAMS 0x000000070ac00000, 0x000000070aa00000| Untracked 
|   6|0x000000070ac00000, 0x000000070ae00000, 0x000000070ae00000|100%| O|  |TAMS 0x000000070ae00000, 0x000000070ac00000| Untracked 
|   7|0x000000070ae00000, 0x000000070b000000, 0x000000070b000000|100%| O|  |TAMS 0x000000070b000000, 0x000000070ae00000| Untracked 
|   8|0x000000070b000000, 0x000000070b200000, 0x000000070b200000|100%| O|  |TAMS 0x000000070b200000, 0x000000070b000000| Untracked 
|   9|0x000000070b200000, 0x000000070b400000, 0x000000070b400000|100%| O|  |TAMS 0x000000070b400000, 0x000000070b200000| Untracked 
|  10|0x000000070b400000, 0x000000070b600000, 0x000000070b600000|100%| O|  |TAMS 0x000000070b600000, 0x000000070b400000| Untracked 
|  11|0x000000070b600000, 0x000000070b800000, 0x000000070b800000|100%| O|  |TAMS 0x000000070b800000, 0x000000070b600000| Untracked 
|  12|0x000000070b800000, 0x000000070ba00000, 0x000000070ba00000|100%| O|  |TAMS 0x000000070ba00000, 0x000000070b800000| Untracked 
|  13|0x000000070ba00000, 0x000000070bc00000, 0x000000070bc00000|100%| O|  |TAMS 0x000000070bc00000, 0x000000070ba00000| Untracked 
|  14|0x000000070bc00000, 0x000000070be00000, 0x000000070be00000|100%| O|  |TAMS 0x000000070be00000, 0x000000070bc00000| Complete 
|  15|0x000000070be00000, 0x000000070c000000, 0x000000070c000000|100%| O|  |TAMS 0x000000070c000000, 0x000000070be00000| Untracked 
|  16|0x000000070c000000, 0x000000070c200000, 0x000000070c200000|100%| O|  |TAMS 0x000000070c200000, 0x000000070c000000| Untracked 
|  17|0x000000070c200000, 0x000000070c400000, 0x000000070c400000|100%| O|  |TAMS 0x000000070c400000, 0x000000070c200000| Untracked 
|  18|0x000000070c400000, 0x000000070c457c00, 0x000000070c600000| 17%| O|  |TAMS 0x000000070c457c00, 0x000000070c400000| Untracked 
|  19|0x000000070c600000, 0x000000070c600000, 0x000000070c800000|  0%| F|  |TAMS 0x000000070c600000, 0x000000070c600000| Untracked 
|  20|0x000000070c800000, 0x000000070ca00000, 0x000000070ca00000|100%| O|  |TAMS 0x000000070ca00000, 0x000000070c800000| Complete 
|  21|0x000000070ca00000, 0x000000070cc00000, 0x000000070cc00000|100%| O|  |TAMS 0x000000070cc00000, 0x000000070ca00000| Complete 
|  22|0x000000070cc00000, 0x000000070ce00000, 0x000000070ce00000|100%| O|  |TAMS 0x000000070ce00000, 0x000000070cc00000| Complete 
|  23|0x000000070ce00000, 0x000000070ce00000, 0x000000070d000000|  0%| F|  |TAMS 0x000000070ce00000, 0x000000070ce00000| Untracked 
|  24|0x000000070d000000, 0x000000070d000000, 0x000000070d200000|  0%| F|  |TAMS 0x000000070d000000, 0x000000070d000000| Untracked 
|  25|0x000000070d200000, 0x000000070d200000, 0x000000070d400000|  0%| F|  |TAMS 0x000000070d200000, 0x000000070d200000| Untracked 
|  26|0x000000070d400000, 0x000000070d400000, 0x000000070d600000|  0%| F|  |TAMS 0x000000070d400000, 0x000000070d400000| Untracked 
|  27|0x000000070d600000, 0x000000070d600000, 0x000000070d800000|  0%| F|  |TAMS 0x000000070d600000, 0x000000070d600000| Untracked 
|  28|0x000000070d800000, 0x000000070d800000, 0x000000070da00000|  0%| F|  |TAMS 0x000000070d800000, 0x000000070d800000| Untracked 
|  29|0x000000070da00000, 0x000000070da00000, 0x000000070dc00000|  0%| F|  |TAMS 0x000000070da00000, 0x000000070da00000| Untracked 
|  30|0x000000070dc00000, 0x000000070dc00000, 0x000000070de00000|  0%| F|  |TAMS 0x000000070dc00000, 0x000000070dc00000| Untracked 
|  31|0x000000070de00000, 0x000000070de00000, 0x000000070e000000|  0%| F|  |TAMS 0x000000070de00000, 0x000000070de00000| Untracked 
|  32|0x000000070e000000, 0x000000070e000000, 0x000000070e200000|  0%| F|  |TAMS 0x000000070e000000, 0x000000070e000000| Untracked 
|  33|0x000000070e200000, 0x000000070e25fec8, 0x000000070e400000| 18%| S|CS|TAMS 0x000000070e200000, 0x000000070e200000| Complete 
|  34|0x000000070e400000, 0x000000070e600000, 0x000000070e600000|100%| S|CS|TAMS 0x000000070e400000, 0x000000070e400000| Complete 
|  35|0x000000070e600000, 0x000000070e600000, 0x000000070e800000|  0%| F|  |TAMS 0x000000070e600000, 0x000000070e600000| Untracked 
|  36|0x000000070e800000, 0x000000070e800000, 0x000000070ea00000|  0%| F|  |TAMS 0x000000070e800000, 0x000000070e800000| Untracked 
|  37|0x000000070ea00000, 0x000000070ea00000, 0x000000070ec00000|  0%| F|  |TAMS 0x000000070ea00000, 0x000000070ea00000| Untracked 
|  38|0x000000070ec00000, 0x000000070ec00000, 0x000000070ee00000|  0%| F|  |TAMS 0x000000070ec00000, 0x000000070ec00000| Untracked 
|  39|0x000000070ee00000, 0x000000070ee00000, 0x000000070f000000|  0%| F|  |TAMS 0x000000070ee00000, 0x000000070ee00000| Untracked 
|  40|0x000000070f000000, 0x000000070f000000, 0x000000070f200000|  0%| F|  |TAMS 0x000000070f000000, 0x000000070f000000| Untracked 
|  41|0x000000070f200000, 0x000000070f200000, 0x000000070f400000|  0%| F|  |TAMS 0x000000070f200000, 0x000000070f200000| Untracked 
|  42|0x000000070f400000, 0x000000070f400000, 0x000000070f600000|  0%| F|  |TAMS 0x000000070f400000, 0x000000070f400000| Untracked 
|  43|0x000000070f600000, 0x000000070f600000, 0x000000070f800000|  0%| F|  |TAMS 0x000000070f600000, 0x000000070f600000| Untracked 
|  44|0x000000070f800000, 0x000000070f800000, 0x000000070fa00000|  0%| F|  |TAMS 0x000000070f800000, 0x000000070f800000| Untracked 
|  45|0x000000070fa00000, 0x000000070fa00000, 0x000000070fc00000|  0%| F|  |TAMS 0x000000070fa00000, 0x000000070fa00000| Untracked 
|  46|0x000000070fc00000, 0x000000070fc00000, 0x000000070fe00000|  0%| F|  |TAMS 0x000000070fc00000, 0x000000070fc00000| Untracked 
|  47|0x000000070fe00000, 0x000000070fe00000, 0x0000000710000000|  0%| F|  |TAMS 0x000000070fe00000, 0x000000070fe00000| Untracked 
|  48|0x0000000710000000, 0x0000000710000000, 0x0000000710200000|  0%| F|  |TAMS 0x0000000710000000, 0x0000000710000000| Untracked 
|  49|0x0000000710200000, 0x0000000710200000, 0x0000000710400000|  0%| F|  |TAMS 0x0000000710200000, 0x0000000710200000| Untracked 
|  50|0x0000000710400000, 0x0000000710400000, 0x0000000710600000|  0%| F|  |TAMS 0x0000000710400000, 0x0000000710400000| Untracked 
|  51|0x0000000710600000, 0x0000000710600000, 0x0000000710800000|  0%| F|  |TAMS 0x0000000710600000, 0x0000000710600000| Untracked 
|  52|0x0000000710800000, 0x0000000710800000, 0x0000000710a00000|  0%| F|  |TAMS 0x0000000710800000, 0x0000000710800000| Untracked 
|  53|0x0000000710a00000, 0x0000000710a00000, 0x0000000710c00000|  0%| F|  |TAMS 0x0000000710a00000, 0x0000000710a00000| Untracked 
|  54|0x0000000710c00000, 0x0000000710c00000, 0x0000000710e00000|  0%| F|  |TAMS 0x0000000710c00000, 0x0000000710c00000| Untracked 
|  55|0x0000000710e00000, 0x0000000710e00000, 0x0000000711000000|  0%| F|  |TAMS 0x0000000710e00000, 0x0000000710e00000| Untracked 
|  56|0x0000000711000000, 0x0000000711000000, 0x0000000711200000|  0%| F|  |TAMS 0x0000000711000000, 0x0000000711000000| Untracked 
|  57|0x0000000711200000, 0x0000000711200000, 0x0000000711400000|  0%| F|  |TAMS 0x0000000711200000, 0x0000000711200000| Untracked 
|  58|0x0000000711400000, 0x0000000711400000, 0x0000000711600000|  0%| F|  |TAMS 0x0000000711400000, 0x0000000711400000| Untracked 
|  59|0x0000000711600000, 0x0000000711600000, 0x0000000711800000|  0%| F|  |TAMS 0x0000000711600000, 0x0000000711600000| Untracked 
|  60|0x0000000711800000, 0x0000000711800000, 0x0000000711a00000|  0%| F|  |TAMS 0x0000000711800000, 0x0000000711800000| Untracked 
|  61|0x0000000711a00000, 0x0000000711a00000, 0x0000000711c00000|  0%| F|  |TAMS 0x0000000711a00000, 0x0000000711a00000| Untracked 
|  62|0x0000000711c00000, 0x0000000711c00000, 0x0000000711e00000|  0%| F|  |TAMS 0x0000000711c00000, 0x0000000711c00000| Untracked 
|  63|0x0000000711e00000, 0x0000000711e00000, 0x0000000712000000|  0%| F|  |TAMS 0x0000000711e00000, 0x0000000711e00000| Untracked 
|  64|0x0000000712000000, 0x0000000712000000, 0x0000000712200000|  0%| F|  |TAMS 0x0000000712000000, 0x0000000712000000| Untracked 
|  65|0x0000000712200000, 0x0000000712200000, 0x0000000712400000|  0%| F|  |TAMS 0x0000000712200000, 0x0000000712200000| Untracked 
|  66|0x0000000712400000, 0x0000000712400000, 0x0000000712600000|  0%| F|  |TAMS 0x0000000712400000, 0x0000000712400000| Untracked 
|  67|0x0000000712600000, 0x0000000712600000, 0x0000000712800000|  0%| F|  |TAMS 0x0000000712600000, 0x0000000712600000| Untracked 
|  68|0x0000000712800000, 0x0000000712800000, 0x0000000712a00000|  0%| F|  |TAMS 0x0000000712800000, 0x0000000712800000| Untracked 
|  69|0x0000000712a00000, 0x0000000712a00000, 0x0000000712c00000|  0%| F|  |TAMS 0x0000000712a00000, 0x0000000712a00000| Untracked 
|  70|0x0000000712c00000, 0x0000000712c00000, 0x0000000712e00000|  0%| F|  |TAMS 0x0000000712c00000, 0x0000000712c00000| Untracked 
|  71|0x0000000712e00000, 0x0000000712e00000, 0x0000000713000000|  0%| F|  |TAMS 0x0000000712e00000, 0x0000000712e00000| Untracked 
|  72|0x0000000713000000, 0x0000000713000000, 0x0000000713200000|  0%| F|  |TAMS 0x0000000713000000, 0x0000000713000000| Untracked 
|  73|0x0000000713200000, 0x0000000713200000, 0x0000000713400000|  0%| F|  |TAMS 0x0000000713200000, 0x0000000713200000| Untracked 
|  74|0x0000000713400000, 0x0000000713400000, 0x0000000713600000|  0%| F|  |TAMS 0x0000000713400000, 0x0000000713400000| Untracked 
|  75|0x0000000713600000, 0x0000000713600000, 0x0000000713800000|  0%| F|  |TAMS 0x0000000713600000, 0x0000000713600000| Untracked 
|  76|0x0000000713800000, 0x0000000713800000, 0x0000000713a00000|  0%| F|  |TAMS 0x0000000713800000, 0x0000000713800000| Untracked 
|  77|0x0000000713a00000, 0x0000000713a00000, 0x0000000713c00000|  0%| F|  |TAMS 0x0000000713a00000, 0x0000000713a00000| Untracked 
|  78|0x0000000713c00000, 0x0000000713c00000, 0x0000000713e00000|  0%| F|  |TAMS 0x0000000713c00000, 0x0000000713c00000| Untracked 
|  79|0x0000000713e00000, 0x0000000713e00000, 0x0000000714000000|  0%| F|  |TAMS 0x0000000713e00000, 0x0000000713e00000| Untracked 
|  80|0x0000000714000000, 0x0000000714000000, 0x0000000714200000|  0%| F|  |TAMS 0x0000000714000000, 0x0000000714000000| Untracked 
|  81|0x0000000714200000, 0x0000000714200000, 0x0000000714400000|  0%| F|  |TAMS 0x0000000714200000, 0x0000000714200000| Untracked 
|  82|0x0000000714400000, 0x0000000714400000, 0x0000000714600000|  0%| F|  |TAMS 0x0000000714400000, 0x0000000714400000| Untracked 
|  83|0x0000000714600000, 0x0000000714600000, 0x0000000714800000|  0%| F|  |TAMS 0x0000000714600000, 0x0000000714600000| Untracked 
|  84|0x0000000714800000, 0x0000000714800000, 0x0000000714a00000|  0%| F|  |TAMS 0x0000000714800000, 0x0000000714800000| Untracked 
|  85|0x0000000714a00000, 0x0000000714a00000, 0x0000000714c00000|  0%| F|  |TAMS 0x0000000714a00000, 0x0000000714a00000| Untracked 
|  86|0x0000000714c00000, 0x0000000714c00000, 0x0000000714e00000|  0%| F|  |TAMS 0x0000000714c00000, 0x0000000714c00000| Untracked 
|  87|0x0000000714e00000, 0x0000000714f00800, 0x0000000715000000| 50%| E|  |TAMS 0x0000000714e00000, 0x0000000714e00000| Complete 
|  88|0x0000000715000000, 0x0000000715200000, 0x0000000715200000|100%| E|CS|TAMS 0x0000000715000000, 0x0000000715000000| Complete 
| 122|0x0000000719400000, 0x0000000719600000, 0x0000000719600000|100%| E|CS|TAMS 0x0000000719400000, 0x0000000719400000| Complete 
|1965|0x00000007ffa00000, 0x00000007ffc00000, 0x00000007ffc00000|100%| O|  |TAMS 0x00000007ffc00000, 0x00000007ffa00000| Untracked 
|1966|0x00000007ffc00000, 0x00000007ffe00000, 0x00000007ffe00000|100%| O|  |TAMS 0x00000007ffe00000, 0x00000007ffc00000| Untracked 
|1967|0x00000007ffe00000, 0x0000000800000000, 0x0000000800000000|100%| O|  |TAMS 0x0000000800000000, 0x00000007ffe00000| Complete 

Card table byte_map: [0x000002741c770000,0x000002741cf20000] _byte_map_base: 0x0000027418f20000

Marking Bits (Prev, Next): (CMBitMap*) 0x000002740522adf0, (CMBitMap*) 0x000002740522ae30
 Prev Bits: [0x000002741d6d0000, 0x0000027421450000)
 Next Bits: [0x0000027421450000, 0x00000274251d0000)

Polling page: 0x0000027403190000

Metaspace:

Usage:
  Non-class:     26.30 MB used.
      Class:      3.37 MB used.
       Both:     29.67 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,      26.50 MB ( 41%) committed,  1 nodes.
      Class space:        1.00 GB reserved,       3.56 MB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,      30.06 MB (  3%) committed. 

Chunk freelists:
   Non-Class:  5.17 MB
       Class:  12.42 MB
        Both:  17.59 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 50.12 MB
CDS: on
MetaspaceReclaimPolicy: balanced
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - new_chunks_are_fully_committed: 0.
 - uncommit_free_chunks: 1.
 - use_allocation_guard: 0.
 - handle_deallocations: 1.


Internal statistics:

num_allocs_failed_limit: 3.
num_arena_births: 244.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 481.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 3.
num_chunks_taken_from_freelist: 1374.
num_chunk_merges: 3.
num_chunk_splits: 940.
num_chunks_enlarged: 719.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=120000Kb used=4002Kb max_used=4002Kb free=115997Kb
 bounds [0x0000027414540000, 0x0000027414930000, 0x000002741ba70000]
CodeHeap 'profiled nmethods': size=120000Kb used=15006Kb max_used=15006Kb free=104993Kb
 bounds [0x000002740ca70000, 0x000002740d920000, 0x0000027413fa0000]
CodeHeap 'non-nmethods': size=5760Kb used=1216Kb max_used=1288Kb free=4544Kb
 bounds [0x0000027413fa0000, 0x0000027414210000, 0x0000027414540000]
 total_blobs=7261 nmethods=6742 adapters=431
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 4.646 Thread 0x0000027427e71600 7568       3       sun.nio.fs.WindowsSecurityDescriptor::address (19 bytes)
Event: 4.646 Thread 0x0000027427e71600 nmethod 7568 0x000002740d913290 code [0x000002740d913440, 0x000002740d9135f8]
Event: 4.651 Thread 0x000002746d652e70 7569       4       java.nio.Buffer::limit (65 bytes)
Event: 4.651 Thread 0x000002746d652e70 nmethod 7569 0x0000027414917b10 code [0x0000027414917c80, 0x0000027414917d78]
Event: 4.651 Thread 0x0000027427e71600 7570   !   3       sun.nio.fs.WindowsFileSystemProvider::newByteChannel (71 bytes)
Event: 4.652 Thread 0x0000027427e71600 nmethod 7570 0x000002740d913690 code [0x000002740d913900, 0x000002740d914368]
Event: 4.653 Thread 0x0000027427e71600 7571       3       sun.nio.ch.FileChannelImpl::setUninterruptible (6 bytes)
Event: 4.654 Thread 0x0000027427e71600 nmethod 7571 0x000002740d914890 code [0x000002740d914a20, 0x000002740d914b38]
Event: 4.659 Thread 0x0000027427e6b6c0 7572       4       java.util.HashSet::add (20 bytes)
Event: 4.661 Thread 0x0000027427e71600 7573       3       java.util.Hashtable::<init> (8 bytes)
Event: 4.661 Thread 0x0000027427e71600 nmethod 7573 0x000002740d914c10 code [0x000002740d914de0, 0x000002740d914f28]
Event: 4.663 Thread 0x0000027427e71600 7574       3       java.util.jar.JarVerifier::<init> (155 bytes)
Event: 4.663 Thread 0x0000027427e71600 nmethod 7574 0x000002740d915010 code [0x000002740d915340, 0x000002740d9168f8]
Event: 4.667 Thread 0x0000027427e71600 7575       3       com.sun.tools.javac.file.CacheFSInfo$$Lambda$201/0x000002742925fda0::apply (12 bytes)
Event: 4.668 Thread 0x0000027427e71600 nmethod 7575 0x000002740d916e90 code [0x000002740d917080, 0x000002740d9176a8]
Event: 4.668 Thread 0x0000027427e71600 7576       3       com.sun.tools.javac.file.CacheFSInfo::lambda$getCanonicalFile$1 (6 bytes)
Event: 4.668 Thread 0x0000027427e71600 nmethod 7576 0x000002740d917910 code [0x000002740d917ae0, 0x000002740d917fa8]
Event: 4.668 Thread 0x0000027427e71600 7577   !   3       com.sun.tools.javac.file.FSInfo::getCanonicalFile (24 bytes)
Event: 4.668 Thread 0x0000027427e71600 nmethod 7577 0x000002740d918190 code [0x000002740d918360, 0x000002740d9187a8]
Event: 4.668 Thread 0x0000027427e71600 7578       3       java.nio.file.spi.FileSystemProvider::newInputStream (107 bytes)

GC Heap History (18 events):
Event: 0.394 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 251904K, used 22528K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 11 young (22528K), 0 survivors (0K)
 Metaspace       used 5407K, committed 5632K, reserved 1114112K
  class space    used 649K, committed 768K, reserved 1048576K
}
Event: 0.397 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 251904K, used 3879K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 2 young (4096K), 2 survivors (4096K)
 Metaspace       used 5407K, committed 5632K, reserved 1114112K
  class space    used 649K, committed 768K, reserved 1048576K
}
Event: 0.771 GC heap before
{Heap before GC invocations=1 (full 0):
 garbage-first heap   total 251904K, used 34599K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 17 young (34816K), 2 survivors (4096K)
 Metaspace       used 9629K, committed 9856K, reserved 1114112K
  class space    used 1177K, committed 1280K, reserved 1048576K
}
Event: 0.774 GC heap after
{Heap after GC invocations=2 (full 0):
 garbage-first heap   total 251904K, used 5517K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 9629K, committed 9856K, reserved 1114112K
  class space    used 1177K, committed 1280K, reserved 1048576K
}
Event: 2.083 GC heap before
{Heap before GC invocations=2 (full 0):
 garbage-first heap   total 251904K, used 152973K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 73 young (149504K), 1 survivors (2048K)
 Metaspace       used 16007K, committed 16192K, reserved 1114112K
  class space    used 1837K, committed 1920K, reserved 1048576K
}
Event: 2.090 GC heap after
{Heap after GC invocations=3 (full 0):
 garbage-first heap   total 251904K, used 15513K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 6 young (12288K), 6 survivors (12288K)
 Metaspace       used 16007K, committed 16192K, reserved 1114112K
  class space    used 1837K, committed 1920K, reserved 1048576K
}
Event: 2.978 GC heap before
{Heap before GC invocations=3 (full 0):
 garbage-first heap   total 251904K, used 99481K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 46 young (94208K), 6 survivors (12288K)
 Metaspace       used 21254K, committed 21504K, reserved 1114112K
  class space    used 2454K, committed 2560K, reserved 1048576K
}
Event: 2.985 GC heap after
{Heap after GC invocations=4 (full 0):
 garbage-first heap   total 251904K, used 27122K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 9 young (18432K), 9 survivors (18432K)
 Metaspace       used 21254K, committed 21504K, reserved 1114112K
  class space    used 2454K, committed 2560K, reserved 1048576K
}
Event: 3.440 GC heap before
{Heap before GC invocations=5 (full 0):
 garbage-first heap   total 102400K, used 68082K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 30 young (61440K), 9 survivors (18432K)
 Metaspace       used 25507K, committed 25920K, reserved 1114112K
  class space    used 2916K, committed 3136K, reserved 1048576K
}
Event: 3.456 GC heap after
{Heap after GC invocations=6 (full 0):
 garbage-first heap   total 108544K, used 43613K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 4 young (8192K), 4 survivors (8192K)
 Metaspace       used 25507K, committed 25920K, reserved 1114112K
  class space    used 2916K, committed 3136K, reserved 1048576K
}
Event: 3.480 GC heap before
{Heap before GC invocations=6 (full 0):
 garbage-first heap   total 108544K, used 45661K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 5 young (10240K), 4 survivors (8192K)
 Metaspace       used 25691K, committed 26048K, reserved 1114112K
  class space    used 2943K, committed 3136K, reserved 1048576K
}
Event: 3.486 GC heap after
{Heap after GC invocations=7 (full 0):
 garbage-first heap   total 108544K, used 44750K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 25691K, committed 26048K, reserved 1114112K
  class space    used 2943K, committed 3136K, reserved 1048576K
}
Event: 3.765 GC heap before
{Heap before GC invocations=7 (full 0):
 garbage-first heap   total 108544K, used 73422K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 16 young (32768K), 1 survivors (2048K)
 Metaspace       used 27063K, committed 27392K, reserved 1114112K
  class space    used 3057K, committed 3264K, reserved 1048576K
}
Event: 3.771 GC heap after
{Heap after GC invocations=8 (full 0):
 garbage-first heap   total 108544K, used 49152K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 2 young (4096K), 2 survivors (4096K)
 Metaspace       used 27063K, committed 27392K, reserved 1114112K
  class space    used 3057K, committed 3264K, reserved 1048576K
}
Event: 4.081 GC heap before
{Heap before GC invocations=8 (full 0):
 garbage-first heap   total 108544K, used 75776K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 16 young (32768K), 2 survivors (4096K)
 Metaspace       used 28570K, committed 28992K, reserved 1114112K
  class space    used 3250K, committed 3456K, reserved 1048576K
}
Event: 4.086 GC heap after
{Heap after GC invocations=9 (full 0):
 garbage-first heap   total 108544K, used 50504K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 1 young (2048K), 1 survivors (2048K)
 Metaspace       used 28570K, committed 28992K, reserved 1114112K
  class space    used 3250K, committed 3456K, reserved 1048576K
}
Event: 4.575 GC heap before
{Heap before GC invocations=9 (full 0):
 garbage-first heap   total 108544K, used 77128K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 15 young (30720K), 1 survivors (2048K)
 Metaspace       used 30379K, committed 30784K, reserved 1114112K
  class space    used 3454K, committed 3648K, reserved 1048576K
}
Event: 4.580 GC heap after
{Heap after GC invocations=10 (full 0):
 garbage-first heap   total 190464K, used 51934K [0x000000070a000000, 0x0000000800000000)
  region size 2048K, 2 young (4096K), 2 survivors (4096K)
 Metaspace       used 30379K, committed 30784K, reserved 1114112K
  class space    used 3454K, committed 3648K, reserved 1048576K
}

Deoptimization events (20 events):
Event: 4.431 Thread 0x00000274051c07c0 DEOPT PACKING pc=0x00000274148d6ee8 sp=0x000000a0580fbbd0
Event: 4.431 Thread 0x00000274051c07c0 DEOPT UNPACKING pc=0x0000027413ff23a3 sp=0x000000a0580fbb80 mode 2
Event: 4.470 Thread 0x00000274051c07c0 Uncommon trap: trap_request=0xffffff45 fr.pc=0x00000274148ae3fc relative=0x000000000000015c
Event: 4.470 Thread 0x00000274051c07c0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000274148ae3fc method=com.sun.tools.javac.util.IntHashTable.lookup(Ljava/lang/Object;)I @ 73 c2
Event: 4.470 Thread 0x00000274051c07c0 DEOPT PACKING pc=0x00000274148ae3fc sp=0x000000a0580fd690
Event: 4.470 Thread 0x00000274051c07c0 DEOPT UNPACKING pc=0x0000027413ff23a3 sp=0x000000a0580fd5f8 mode 2
Event: 4.483 Thread 0x00000274051c07c0 Uncommon trap: trap_request=0xffffff45 fr.pc=0x0000027414600f3c relative=0x000000000000019c
Event: 4.483 Thread 0x00000274051c07c0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x0000027414600f3c method=java.util.WeakHashMap.expungeStaleEntries()V @ 9 c2
Event: 4.483 Thread 0x00000274051c07c0 DEOPT PACKING pc=0x0000027414600f3c sp=0x000000a0580fd480
Event: 4.483 Thread 0x00000274051c07c0 DEOPT UNPACKING pc=0x0000027413ff23a3 sp=0x000000a0580fd418 mode 2
Event: 4.556 Thread 0x00000274051c07c0 Uncommon trap: trap_request=0xffffff45 fr.pc=0x00000274148ddf78 relative=0x0000000000000538
Event: 4.556 Thread 0x00000274051c07c0 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000274148ddf78 method=java.lang.reflect.Field.get(Ljava/lang/Object;)Ljava/lang/Object; @ 4 c2
Event: 4.556 Thread 0x00000274051c07c0 DEOPT PACKING pc=0x00000274148ddf78 sp=0x000000a0580fc470
Event: 4.556 Thread 0x00000274051c07c0 DEOPT UNPACKING pc=0x0000027413ff23a3 sp=0x000000a0580fc448 mode 2
Event: 4.570 Thread 0x00000274051c07c0 DEOPT PACKING pc=0x000002740cf64bd4 sp=0x000000a0580fce20
Event: 4.570 Thread 0x00000274051c07c0 DEOPT UNPACKING pc=0x0000027413ff2b43 sp=0x000000a0580fc3a0 mode 0
Event: 4.570 Thread 0x00000274051c07c0 DEOPT PACKING pc=0x000002740cf64bd4 sp=0x000000a0580fce20
Event: 4.570 Thread 0x00000274051c07c0 DEOPT UNPACKING pc=0x0000027413ff2b43 sp=0x000000a0580fc3a0 mode 0
Event: 4.596 Thread 0x00000274051c07c0 DEOPT PACKING pc=0x000002740cf64bd4 sp=0x000000a0580fc940
Event: 4.596 Thread 0x00000274051c07c0 DEOPT UNPACKING pc=0x0000027413ff2b43 sp=0x000000a0580fbec0 mode 0

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 4.415 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070ed55098}> (0x000000070ed55098) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.415 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070ed55ce8}> (0x000000070ed55ce8) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.434 Thread 0x00000274051c07c0 Exception <a 'java/lang/NoSuchMethodError'{0x000000070ede6428}: 'int java.lang.invoke.DirectMethodHandle$Holder.invokeVirtual(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)'> (0x000000070ede6428) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 4.435 Thread 0x00000274051c07c0 Exception <a 'java/lang/NoSuchMethodError'{0x000000070edf1450}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, int, java.lang.Object)'> (0x000000070edf1450) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 4.435 Thread 0x00000274051c07c0 Exception <a 'java/lang/NoSuchMethodError'{0x000000070edf5d80}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, int, java.lang.Object)'> (0x000000070edf5d80) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 759]
Event: 4.458 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070ea5b760}> (0x000000070ea5b760) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.458 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070ea5bdf8}> (0x000000070ea5bdf8) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.458 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070ea5cad0}> (0x000000070ea5cad0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.468 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eaa5808}> (0x000000070eaa5808) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.468 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eaa5ea0}> (0x000000070eaa5ea0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.468 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eaa6b78}> (0x000000070eaa6b78) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.470 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eab80e8}> (0x000000070eab80e8) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.470 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eab8770}> (0x000000070eab8770) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.471 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eab93c0}> (0x000000070eab93c0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.475 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eb36e78}> (0x000000070eb36e78) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.476 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eb374f0}> (0x000000070eb374f0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.476 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eb380b8}> (0x000000070eb380b8) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.481 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eb5e6e8}> (0x000000070eb5e6e8) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.481 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eb5ed80}> (0x000000070eb5ed80) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]
Event: 4.481 Thread 0x00000274051c07c0 Exception <a 'sun/nio/fs/WindowsException'{0x000000070eb5fa50}> (0x000000070eb5fa50) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 516]

VM Operations (20 events):
Event: 4.315 Executing VM operation: HandshakeAllThreads
Event: 4.315 Executing VM operation: HandshakeAllThreads done
Event: 4.371 Executing VM operation: ICBufferFull
Event: 4.372 Executing VM operation: ICBufferFull done
Event: 4.420 Executing VM operation: HandshakeAllThreads
Event: 4.420 Executing VM operation: HandshakeAllThreads done
Event: 4.421 Executing VM operation: ICBufferFull
Event: 4.421 Executing VM operation: ICBufferFull done
Event: 4.426 Executing VM operation: HandshakeAllThreads
Event: 4.426 Executing VM operation: HandshakeAllThreads done
Event: 4.427 Executing VM operation: HandshakeAllThreads
Event: 4.427 Executing VM operation: HandshakeAllThreads done
Event: 4.442 Executing VM operation: HandshakeAllThreads
Event: 4.442 Executing VM operation: HandshakeAllThreads done
Event: 4.574 Executing VM operation: G1CollectForAllocation
Event: 4.580 Executing VM operation: G1CollectForAllocation done
Event: 4.597 Executing VM operation: G1Concurrent
Event: 4.602 Executing VM operation: G1Concurrent done
Event: 4.609 Executing VM operation: G1Concurrent
Event: 4.609 Executing VM operation: G1Concurrent done

Events (20 events):
Event: 4.297 loading class java/util/function/ToIntBiFunction
Event: 4.297 loading class java/util/function/ToIntBiFunction done
Event: 4.302 loading class java/io/DataOutputStream
Event: 4.302 loading class java/io/DataOutputStream done
Event: 4.310 loading class java/nio/file/Path$1
Event: 4.310 loading class java/nio/file/Path$1 done
Event: 4.441 loading class java/util/EnumMap$EntrySet
Event: 4.441 loading class java/util/EnumMap$EntrySet done
Event: 4.441 loading class java/util/EnumMap$EntryIterator
Event: 4.441 loading class java/util/EnumMap$EnumMapIterator
Event: 4.441 loading class java/util/EnumMap$EnumMapIterator done
Event: 4.441 loading class java/util/EnumMap$EntryIterator done
Event: 4.441 loading class java/util/EnumMap$EntryIterator$Entry
Event: 4.441 loading class java/util/EnumMap$EntryIterator$Entry done
Event: 4.483 loading class java/util/EnumMap$Values
Event: 4.483 loading class java/util/EnumMap$Values done
Event: 4.483 loading class java/util/EnumMap$ValueIterator
Event: 4.483 loading class java/util/EnumMap$ValueIterator done
Event: 4.487 loading class java/util/WeakHashMap$KeyIterator
Event: 4.487 loading class java/util/WeakHashMap$KeyIterator done


Dynamic libraries:
0x00007ff710500000 - 0x00007ff710510000 	C:\Program Files\Java\jdk-17\bin\java.exe
0x00007ffe64e30000 - 0x00007ffe65028000 	C:\Windows\SYSTEM32\ntdll.dll
0x00007ffe63ad0000 - 0x00007ffe63b8d000 	C:\Windows\System32\KERNEL32.DLL
0x00007ffe625e0000 - 0x00007ffe628d6000 	C:\Windows\System32\KERNELBASE.dll
0x00007ffe62c70000 - 0x00007ffe62d70000 	C:\Windows\System32\ucrtbase.dll
0x00007ffe428c0000 - 0x00007ffe428db000 	C:\Program Files\Java\jdk-17\bin\VCRUNTIME140.dll
0x00007ffe5d8a0000 - 0x00007ffe5d8b9000 	C:\Program Files\Java\jdk-17\bin\jli.dll
0x00007ffe64c70000 - 0x00007ffe64d1e000 	C:\Windows\System32\ADVAPI32.dll
0x00007ffe64330000 - 0x00007ffe643ce000 	C:\Windows\System32\msvcrt.dll
0x00007ffe64d40000 - 0x00007ffe64ddc000 	C:\Windows\System32\sechost.dll
0x00007ffe63d10000 - 0x00007ffe63e36000 	C:\Windows\System32\RPCRT4.dll
0x00007ffe63930000 - 0x00007ffe63ace000 	C:\Windows\System32\USER32.dll
0x00007ffe62510000 - 0x00007ffe62532000 	C:\Windows\System32\win32u.dll
0x00007ffe63900000 - 0x00007ffe6392c000 	C:\Windows\System32\GDI32.dll
0x00007ffe51640000 - 0x00007ffe518da000 	C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.3636_none_60b6a03d71f818d5\COMCTL32.dll
0x00007ffe62d70000 - 0x00007ffe62e8a000 	C:\Windows\System32\gdi32full.dll
0x00007ffe62540000 - 0x00007ffe625dd000 	C:\Windows\System32\msvcp_win.dll
0x00007ffe5a2c0000 - 0x00007ffe5a2ca000 	C:\Windows\SYSTEM32\VERSION.dll
0x00007ffe63b90000 - 0x00007ffe63bc0000 	C:\Windows\System32\IMM32.DLL
0x00007ffe428b0000 - 0x00007ffe428bc000 	C:\Program Files\Java\jdk-17\bin\vcruntime140_1.dll
0x00007ffe266b0000 - 0x00007ffe2673e000 	C:\Program Files\Java\jdk-17\bin\msvcp140.dll
0x00007ffe26a50000 - 0x00007ffe27631000 	C:\Program Files\Java\jdk-17\bin\server\jvm.dll
0x00007ffe64de0000 - 0x00007ffe64de8000 	C:\Windows\System32\PSAPI.DLL
0x00007ffe408b0000 - 0x00007ffe408b9000 	C:\Windows\SYSTEM32\WSOCK32.dll
0x00007ffe5a290000 - 0x00007ffe5a2b7000 	C:\Windows\SYSTEM32\WINMM.dll
0x00007ffe64b50000 - 0x00007ffe64bbb000 	C:\Windows\System32\WS2_32.dll
0x00007ffe603f0000 - 0x00007ffe60402000 	C:\Windows\SYSTEM32\kernel.appcore.dll
0x00007ffe38a40000 - 0x00007ffe38a4a000 	C:\Program Files\Java\jdk-17\bin\jimage.dll
0x00007ffe5bec0000 - 0x00007ffe5c0a4000 	C:\Windows\SYSTEM32\DBGHELP.DLL
0x00007ffe51600000 - 0x00007ffe51634000 	C:\Windows\SYSTEM32\dbgcore.DLL
0x00007ffe62a80000 - 0x00007ffe62b02000 	C:\Windows\System32\bcryptPrimitives.dll
0x00007ffe26a20000 - 0x00007ffe26a45000 	C:\Program Files\Java\jdk-17\bin\java.dll
0x00007ffe26940000 - 0x00007ffe26a17000 	C:\Program Files\Java\jdk-17\bin\jsvml.dll
0x00007ffe63020000 - 0x00007ffe63764000 	C:\Windows\System32\SHELL32.dll
0x00007ffe605f0000 - 0x00007ffe60d8b000 	C:\Windows\SYSTEM32\windows.storage.dll
0x00007ffe647f0000 - 0x00007ffe64b44000 	C:\Windows\System32\combase.dll
0x00007ffe61ee0000 - 0x00007ffe61f0d000 	C:\Windows\SYSTEM32\Wldp.dll
0x00007ffe643d0000 - 0x00007ffe6447d000 	C:\Windows\System32\SHCORE.dll
0x00007ffe63770000 - 0x00007ffe637c5000 	C:\Windows\System32\shlwapi.dll
0x00007ffe62440000 - 0x00007ffe62465000 	C:\Windows\SYSTEM32\profapi.dll
0x00007ffe26920000 - 0x00007ffe26939000 	C:\Program Files\Java\jdk-17\bin\net.dll
0x00007ffe5af30000 - 0x00007ffe5b03a000 	C:\Windows\SYSTEM32\WINHTTP.dll
0x00007ffe61c40000 - 0x00007ffe61caa000 	C:\Windows\system32\mswsock.dll
0x00007ffe26900000 - 0x00007ffe26916000 	C:\Program Files\Java\jdk-17\bin\nio.dll
0x00007ffe268e0000 - 0x00007ffe268f8000 	C:\Program Files\Java\jdk-17\bin\zip.dll
0x0000000069ac0000 - 0x0000000069ae4000 	C:\Program Files\NetBeans-19\netbeans\java\maven\lib\jansi-native\Windows\x86_64\jansi.dll
0x00007ffe372b0000 - 0x00007ffe372c0000 	C:\Program Files\Java\jdk-17\bin\verify.dll
0x00007ffe61630000 - 0x00007ffe61663000 	C:\Windows\SYSTEM32\ntmarta.dll

dbghelp: loaded successfully - version: 4.0.5 - missing functions: none
symbol engine: initialized successfully - sym options: 0x614 - pdb path: .;C:\Program Files\Java\jdk-17\bin;C:\Windows\SYSTEM32;C:\Windows\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.3636_none_60b6a03d71f818d5;C:\Program Files\Java\jdk-17\bin\server;C:\Program Files\NetBeans-19\netbeans\java\maven\lib\jansi-native\Windows\x86_64

VM Arguments:
jvm_args: -Dclassworlds.conf=C:\Program Files\NetBeans-19\netbeans\java\maven\bin\m2.conf -Dmaven.home=C:\Program Files\NetBeans-19\netbeans\java\maven -Dlibrary.jansi.path=C:\Program Files\NetBeans-19\netbeans\java\maven\lib\jansi-native -Dmaven.multiModuleProjectDirectory=D:\u\Netbeans Web\tienda 
java_command: org.codehaus.plexus.classworlds.launcher.Launcher -Dmaven.ext.class.path=C:\Program Files\NetBeans-19\netbeans\java\maven-nblib\netbeans-eventspy.jar -Dfile.encoding=UTF-8 --no-transfer-progress clean install
java_class_path (initial): C:\Program Files\NetBeans-19\netbeans\java\maven\boot\plexus-classworlds-2.7.0.jar
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 4                                         {product} {ergonomic}
     uint ConcGCThreads                            = 3                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 10                                        {product} {ergonomic}
   size_t G1HeapRegionSize                         = 2097152                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 257949696                                 {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 4127195136                                {product} {ergonomic}
   size_t MaxNewSize                               = 2474639360                                {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 2097152                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 5839372                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122909434                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122909434                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 4127195136                             {manageable} {ergonomic}
     bool UseCompressedClassPointers               = true                           {product lp64_product} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags
 #1: stderr all=off uptime,level,tags

Environment Variables:
JAVA_HOME=C:\Program Files\Java\jdk-17
PATH=C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\smerl\AppData\Local\Microsoft\WindowsApps;
USERNAME=smerl
OS=Windows_NT
PROCESSOR_IDENTIFIER=AMD64 Family 23 Model 96 Stepping 1, AuthenticAMD



---------------  S Y S T E M  ---------------

OS:
 Windows 10 , 64 bit Build 19041 (10.0.19041.3636)
OS uptime: 0 days 0:05 hours

CPU: total 12 (initial active 12) (12 cores per cpu, 2 threads per core) family 23 model 96 stepping 1 microcode 0x0, cx8, cmov, fxsr, ht, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4a, sse4.1, sse4.2, popcnt, lzcnt, tsc, tscinvbit, avx, avx2, aes, clmul, bmi1, bmi2, adx, sha, fma, vzeroupper, clflush, clflushopt

Memory: 4k page, system-wide physical 15740M (11709M free)
TotalPageFile size 18172M (AvailPageFile size 12380M)
current process WorkingSet (physical memory assigned to process): 263M, peak: 285M
current process commit charge ("private bytes"): 378M, peak: 415M

vm_info: Java HotSpot(TM) 64-Bit Server VM (17.0.9+11-LTS-201) for windows-amd64 JRE (17.0.9+11-LTS-201), built on Oct 10 2023 23:16:06 by "mach5one" with MS VC++ 17.1 (VS2022)

END.
